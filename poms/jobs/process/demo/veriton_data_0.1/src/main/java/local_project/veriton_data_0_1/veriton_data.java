// ============================================================================
//
// Copyright (c) 2006-2015, Talend Inc.
//
// This source code has been automatically generated by_Talend Open Studio for Data Integration
// / Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package local_project.veriton_data_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")
/**
 * Job: veriton_data Purpose: <br>
 * Description:  <br>
 * @author user@talend.com
 * @version 7.0.1.20180411_1414
 * @status 
 */
public class veriton_data implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset
			.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

	}

	private ContextProperties context = new ContextProperties();

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "veriton_data";
	private final String projectName = "LOCAL_PROJECT";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(
			java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources
				.entrySet()) {
			talendDataSources.put(
					dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry
							.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap
				.put(KEY_DB_DATASOURCES_RAW,
						new java.util.HashMap<String, javax.sql.DataSource>(
								dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(
			new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent,
				final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null
						&& currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE",
							getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE",
						getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent
						+ " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					veriton_data.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass()
							.getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(veriton_data.this, new Object[] { e,
									currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tFileInputExcel_1_error(Exception exception,
			String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_1_onSubJobError(Exception exception,
			String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread
				.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(),
				ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row1Struct implements
			routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_LOCAL_PROJECT_veriton_data = new byte[0];
		static byte[] commonByteArray_LOCAL_PROJECT_veriton_data = new byte[0];

		public String Columns_veitone;

		public String getColumns_veitone() {
			return this.Columns_veitone;
		}

		public Integer all_Unwgtd;

		public Integer getAll_Unwgtd() {
			return this.all_Unwgtd;
		}

		public Integer all_Weighted;

		public Integer getAll_Weighted() {
			return this.all_Weighted;
		}

		public Float all_Vert_percent;

		public Float getAll_Vert_percent() {
			return this.all_Vert_percent;
		}

		public Float all_Percent_Value_Present;

		public Float getAll_Percent_Value_Present() {
			return this.all_Percent_Value_Present;
		}

		public Integer Men_Unwgtd;

		public Integer getMen_Unwgtd() {
			return this.Men_Unwgtd;
		}

		public Integer Men_Weighted;

		public Integer getMen_Weighted() {
			return this.Men_Weighted;
		}

		public Float Men_Horz_percent;

		public Float getMen_Horz_percent() {
			return this.Men_Horz_percent;
		}

		public Float Men_Vert_percent;

		public Float getMen_Vert_percent() {
			return this.Men_Vert_percent;
		}

		public Integer Men_Index;

		public Integer getMen_Index() {
			return this.Men_Index;
		}

		public Integer Men_Likelihood;

		public Integer getMen_Likelihood() {
			return this.Men_Likelihood;
		}

		public Integer Women_Unwgtd;

		public Integer getWomen_Unwgtd() {
			return this.Women_Unwgtd;
		}

		public Integer Women_Weighted;

		public Integer getWomen_Weighted() {
			return this.Women_Weighted;
		}

		public Float Women_Horz_percent;

		public Float getWomen_Horz_percent() {
			return this.Women_Horz_percent;
		}

		public Float Women_Vert_percent;

		public Float getWomen_Vert_percent() {
			return this.Women_Vert_percent;
		}

		public Integer Women_Index;

		public Integer getWomen_Index() {
			return this.Women_Index;
		}

		public Integer Women_Likelihood;

		public Integer getWomen_Likelihood() {
			return this.Women_Likelihood;
		}

		public Integer Age_18_24_Unwgtd;

		public Integer getAge_18_24_Unwgtd() {
			return this.Age_18_24_Unwgtd;
		}

		public Integer Age_18_24_Weighted;

		public Integer getAge_18_24_Weighted() {
			return this.Age_18_24_Weighted;
		}

		public Float Age_18_24_Horz_percent;

		public Float getAge_18_24_Horz_percent() {
			return this.Age_18_24_Horz_percent;
		}

		public Float Age_18_24_Vert_percent;

		public Float getAge_18_24_Vert_percent() {
			return this.Age_18_24_Vert_percent;
		}

		public Integer Age_18_24_Index;

		public Integer getAge_18_24_Index() {
			return this.Age_18_24_Index;
		}

		public Integer Age_18_24_Likelihood;

		public Integer getAge_18_24_Likelihood() {
			return this.Age_18_24_Likelihood;
		}

		public Integer Age_25_34_Unwgtd;

		public Integer getAge_25_34_Unwgtd() {
			return this.Age_25_34_Unwgtd;
		}

		public Integer Age_25_34_Weighted;

		public Integer getAge_25_34_Weighted() {
			return this.Age_25_34_Weighted;
		}

		public Float Age_25_34_Horz_percent;

		public Float getAge_25_34_Horz_percent() {
			return this.Age_25_34_Horz_percent;
		}

		public Float Age_25_34_Vert_percent;

		public Float getAge_25_34_Vert_percent() {
			return this.Age_25_34_Vert_percent;
		}

		public Integer Age_25_34_Index;

		public Integer getAge_25_34_Index() {
			return this.Age_25_34_Index;
		}

		public Integer Age_25_34_Likelihood;

		public Integer getAge_25_34_Likelihood() {
			return this.Age_25_34_Likelihood;
		}

		public Integer Age_35_44_Unwgtd;

		public Integer getAge_35_44_Unwgtd() {
			return this.Age_35_44_Unwgtd;
		}

		public Integer Age_35_44_Weighted;

		public Integer getAge_35_44_Weighted() {
			return this.Age_35_44_Weighted;
		}

		public Float Age_35_44_Horz_percent;

		public Float getAge_35_44_Horz_percent() {
			return this.Age_35_44_Horz_percent;
		}

		public Float Age_35_44_Vert_percent;

		public Float getAge_35_44_Vert_percent() {
			return this.Age_35_44_Vert_percent;
		}

		public Integer Age_35_44_Index;

		public Integer getAge_35_44_Index() {
			return this.Age_35_44_Index;
		}

		public Integer Age_35_44_Likelihood;

		public Integer getAge_35_44_Likelihood() {
			return this.Age_35_44_Likelihood;
		}

		public Integer Age_45_54_Unwgtd;

		public Integer getAge_45_54_Unwgtd() {
			return this.Age_45_54_Unwgtd;
		}

		public Integer Age_45_54_Weighted;

		public Integer getAge_45_54_Weighted() {
			return this.Age_45_54_Weighted;
		}

		public Float Age_45_54_Horz_percent;

		public Float getAge_45_54_Horz_percent() {
			return this.Age_45_54_Horz_percent;
		}

		public Float Age_45_54_Vert_percent;

		public Float getAge_45_54_Vert_percent() {
			return this.Age_45_54_Vert_percent;
		}

		public Integer Age_45_54_Index;

		public Integer getAge_45_54_Index() {
			return this.Age_45_54_Index;
		}

		public Integer Age_45_54_Likelihood;

		public Integer getAge_45_54_Likelihood() {
			return this.Age_45_54_Likelihood;
		}

		public Integer Age_55_64_Unwgtd;

		public Integer getAge_55_64_Unwgtd() {
			return this.Age_55_64_Unwgtd;
		}

		public Integer Age_55_64_Weighted;

		public Integer getAge_55_64_Weighted() {
			return this.Age_55_64_Weighted;
		}

		public Float Age_55_64_Horz_percent;

		public Float getAge_55_64_Horz_percent() {
			return this.Age_55_64_Horz_percent;
		}

		public Float Age_55_64_Vert_percent;

		public Float getAge_55_64_Vert_percent() {
			return this.Age_55_64_Vert_percent;
		}

		public Integer Age_55_64_Index;

		public Integer getAge_55_64_Index() {
			return this.Age_55_64_Index;
		}

		public Integer Age_55_64_Likelihood;

		public Integer getAge_55_64_Likelihood() {
			return this.Age_55_64_Likelihood;
		}

		public Integer Age_65_above_Unwgtd;

		public Integer getAge_65_above_Unwgtd() {
			return this.Age_65_above_Unwgtd;
		}

		public Integer Age_65_above_Weighted;

		public Integer getAge_65_above_Weighted() {
			return this.Age_65_above_Weighted;
		}

		public Float Age_65_above_Horz_percent;

		public Float getAge_65_above_Horz_percent() {
			return this.Age_65_above_Horz_percent;
		}

		public Float Age_65_above_Vert_percent;

		public Float getAge_65_above_Vert_percent() {
			return this.Age_65_above_Vert_percent;
		}

		public Integer Age_65_above_Index;

		public Integer getAge_65_above_Index() {
			return this.Age_65_above_Index;
		}

		public Integer Age_65_above_Likelihood;

		public Integer getAge_65_above_Likelihood() {
			return this.Age_65_above_Likelihood;
		}

		public Integer Adults_18_34_Unwgtd;

		public Integer getAdults_18_34_Unwgtd() {
			return this.Adults_18_34_Unwgtd;
		}

		public Integer Adults_18_34_Weighted;

		public Integer getAdults_18_34_Weighted() {
			return this.Adults_18_34_Weighted;
		}

		public Float Adults_18_34_Horz_percent;

		public Float getAdults_18_34_Horz_percent() {
			return this.Adults_18_34_Horz_percent;
		}

		public Float Adults_18_34_Vert_percent;

		public Float getAdults_18_34_Vert_percent() {
			return this.Adults_18_34_Vert_percent;
		}

		public Integer Adults_18_34_Index;

		public Integer getAdults_18_34_Index() {
			return this.Adults_18_34_Index;
		}

		public Integer Adults_18_34_Likelihood;

		public Integer getAdults_18_34_Likelihood() {
			return this.Adults_18_34_Likelihood;
		}

		public Integer Adults_18_49_Unwgtd;

		public Integer getAdults_18_49_Unwgtd() {
			return this.Adults_18_49_Unwgtd;
		}

		public Integer Adults_18_49_Weighted;

		public Integer getAdults_18_49_Weighted() {
			return this.Adults_18_49_Weighted;
		}

		public Float Adults_18_49_Horz_percent;

		public Float getAdults_18_49_Horz_percent() {
			return this.Adults_18_49_Horz_percent;
		}

		public Float Adults_18_49_Vert_percent;

		public Float getAdults_18_49_Vert_percent() {
			return this.Adults_18_49_Vert_percent;
		}

		public Integer Adults_18_49_Index;

		public Integer getAdults_18_49_Index() {
			return this.Adults_18_49_Index;
		}

		public Integer Adults_18_49_Likelihood;

		public Integer getAdults_18_49_Likelihood() {
			return this.Adults_18_49_Likelihood;
		}

		public Integer Adults_25_54_Unwgtd;

		public Integer getAdults_25_54_Unwgtd() {
			return this.Adults_25_54_Unwgtd;
		}

		public Integer Adults_25_54_Weighted;

		public Integer getAdults_25_54_Weighted() {
			return this.Adults_25_54_Weighted;
		}

		public Float Adults_25_54_Horz_percent;

		public Float getAdults_25_54_Horz_percent() {
			return this.Adults_25_54_Horz_percent;
		}

		public Float Adults_25_54_Vert_percent;

		public Float getAdults_25_54_Vert_percent() {
			return this.Adults_25_54_Vert_percent;
		}

		public Integer Adults_25_54_Index;

		public Integer getAdults_25_54_Index() {
			return this.Adults_25_54_Index;
		}

		public Integer Adults_25_54_Likelihood;

		public Integer getAdults_25_54_Likelihood() {
			return this.Adults_25_54_Likelihood;
		}

		public Integer Adults_35_54_Unwgtd;

		public Integer getAdults_35_54_Unwgtd() {
			return this.Adults_35_54_Unwgtd;
		}

		public Integer Adults_35_54_Weighted;

		public Integer getAdults_35_54_Weighted() {
			return this.Adults_35_54_Weighted;
		}

		public Float Adults_35_54_Horz_percent;

		public Float getAdults_35_54_Horz_percent() {
			return this.Adults_35_54_Horz_percent;
		}

		public Float Adults_35_54_Vert_percent;

		public Float getAdults_35_54_Vert_percent() {
			return this.Adults_35_54_Vert_percent;
		}

		public Integer Adults_35_54_Index;

		public Integer getAdults_35_54_Index() {
			return this.Adults_35_54_Index;
		}

		public Integer Adults_35_54_Likelihood;

		public Integer getAdults_35_54_Likelihood() {
			return this.Adults_35_54_Likelihood;
		}

		public Integer Men_18_34_Unwgtd;

		public Integer getMen_18_34_Unwgtd() {
			return this.Men_18_34_Unwgtd;
		}

		public Integer Men_18_34_Weighted;

		public Integer getMen_18_34_Weighted() {
			return this.Men_18_34_Weighted;
		}

		public Float Men_18_34_Horz_percent;

		public Float getMen_18_34_Horz_percent() {
			return this.Men_18_34_Horz_percent;
		}

		public Float Men_18_34_Vert_percent;

		public Float getMen_18_34_Vert_percent() {
			return this.Men_18_34_Vert_percent;
		}

		public Integer Men_18_34_Index;

		public Integer getMen_18_34_Index() {
			return this.Men_18_34_Index;
		}

		public Integer Men_18_34_Likelihood;

		public Integer getMen_18_34_Likelihood() {
			return this.Men_18_34_Likelihood;
		}

		public Integer Men_18_49_Unwgtd;

		public Integer getMen_18_49_Unwgtd() {
			return this.Men_18_49_Unwgtd;
		}

		public Integer Men_18_49_Weighted;

		public Integer getMen_18_49_Weighted() {
			return this.Men_18_49_Weighted;
		}

		public Float Men_18_49_Horz_percent;

		public Float getMen_18_49_Horz_percent() {
			return this.Men_18_49_Horz_percent;
		}

		public Float Men_18_49_Vert_percent;

		public Float getMen_18_49_Vert_percent() {
			return this.Men_18_49_Vert_percent;
		}

		public Integer Men_18_49_Index;

		public Integer getMen_18_49_Index() {
			return this.Men_18_49_Index;
		}

		public Integer Men_18_49_Likelihood;

		public Integer getMen_18_49_Likelihood() {
			return this.Men_18_49_Likelihood;
		}

		public Integer Men_25_54_Unwgtd;

		public Integer getMen_25_54_Unwgtd() {
			return this.Men_25_54_Unwgtd;
		}

		public Integer Men_25_54_Weighted;

		public Integer getMen_25_54_Weighted() {
			return this.Men_25_54_Weighted;
		}

		public Float Men_25_54_Horz_percent;

		public Float getMen_25_54_Horz_percent() {
			return this.Men_25_54_Horz_percent;
		}

		public Float Men_25_54_Vert_percent;

		public Float getMen_25_54_Vert_percent() {
			return this.Men_25_54_Vert_percent;
		}

		public Integer Men_25_54_Index;

		public Integer getMen_25_54_Index() {
			return this.Men_25_54_Index;
		}

		public Integer Men_25_54_Likelihood;

		public Integer getMen_25_54_Likelihood() {
			return this.Men_25_54_Likelihood;
		}

		public Integer Men_35_54_Unwgtd;

		public Integer getMen_35_54_Unwgtd() {
			return this.Men_35_54_Unwgtd;
		}

		public Integer Men_35_54_Weighted;

		public Integer getMen_35_54_Weighted() {
			return this.Men_35_54_Weighted;
		}

		public Float Men_35_54_Horz_percent;

		public Float getMen_35_54_Horz_percent() {
			return this.Men_35_54_Horz_percent;
		}

		public Float Men_35_54_Vert_percent;

		public Float getMen_35_54_Vert_percent() {
			return this.Men_35_54_Vert_percent;
		}

		public Integer Men_35_54_Index;

		public Integer getMen_35_54_Index() {
			return this.Men_35_54_Index;
		}

		public Integer Men_35_54_Likelihood;

		public Integer getMen_35_54_Likelihood() {
			return this.Men_35_54_Likelihood;
		}

		public Integer Women_18_34_Unwgtd;

		public Integer getWomen_18_34_Unwgtd() {
			return this.Women_18_34_Unwgtd;
		}

		public Integer Women_18_34_Weighted;

		public Integer getWomen_18_34_Weighted() {
			return this.Women_18_34_Weighted;
		}

		public Float Women_18_34_Horz_percent;

		public Float getWomen_18_34_Horz_percent() {
			return this.Women_18_34_Horz_percent;
		}

		public Float Women_18_34_Vert_percent;

		public Float getWomen_18_34_Vert_percent() {
			return this.Women_18_34_Vert_percent;
		}

		public Integer Women_18_34_Index;

		public Integer getWomen_18_34_Index() {
			return this.Women_18_34_Index;
		}

		public Integer Women_18_34_Likelihood;

		public Integer getWomen_18_34_Likelihood() {
			return this.Women_18_34_Likelihood;
		}

		public Integer Women_18_49_Unwgtd;

		public Integer getWomen_18_49_Unwgtd() {
			return this.Women_18_49_Unwgtd;
		}

		public Integer Women_18_49_Weighted;

		public Integer getWomen_18_49_Weighted() {
			return this.Women_18_49_Weighted;
		}

		public Float Women_18_49_Horz_percent;

		public Float getWomen_18_49_Horz_percent() {
			return this.Women_18_49_Horz_percent;
		}

		public Float Women_18_49_Vert_percent;

		public Float getWomen_18_49_Vert_percent() {
			return this.Women_18_49_Vert_percent;
		}

		public Integer Women_18_49_Index;

		public Integer getWomen_18_49_Index() {
			return this.Women_18_49_Index;
		}

		public Integer Women_18_49_Likelihood;

		public Integer getWomen_18_49_Likelihood() {
			return this.Women_18_49_Likelihood;
		}

		public Integer Women_25_54_Unwgtd;

		public Integer getWomen_25_54_Unwgtd() {
			return this.Women_25_54_Unwgtd;
		}

		public Integer Women_25_54_Weighted;

		public Integer getWomen_25_54_Weighted() {
			return this.Women_25_54_Weighted;
		}

		public Float Women_25_54_Horz_percent;

		public Float getWomen_25_54_Horz_percent() {
			return this.Women_25_54_Horz_percent;
		}

		public Float Women_25_54_Vert_percent;

		public Float getWomen_25_54_Vert_percent() {
			return this.Women_25_54_Vert_percent;
		}

		public Integer Women_25_54_Index;

		public Integer getWomen_25_54_Index() {
			return this.Women_25_54_Index;
		}

		public Integer Women_25_54_Likelihood;

		public Integer getWomen_25_54_Likelihood() {
			return this.Women_25_54_Likelihood;
		}

		public Integer Women_35_54_Unwgtd;

		public Integer getWomen_35_54_Unwgtd() {
			return this.Women_35_54_Unwgtd;
		}

		public Integer Women_35_54_Weighted;

		public Integer getWomen_35_54_Weighted() {
			return this.Women_35_54_Weighted;
		}

		public Float Women_35_54_Horz_percent;

		public Float getWomen_35_54_Horz_percent() {
			return this.Women_35_54_Horz_percent;
		}

		public Float Women_35_54_Vert_percent;

		public Float getWomen_35_54_Vert_percent() {
			return this.Women_35_54_Vert_percent;
		}

		public Integer Women_35_54_Index;

		public Integer getWomen_35_54_Index() {
			return this.Women_35_54_Index;
		}

		public Integer Women_35_54_Likelihood;

		public Integer getWomen_35_54_Likelihood() {
			return this.Women_35_54_Likelihood;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Index() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent;
		}

		public Float Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood;

		public Integer getTotal_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood() {
			return this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd;

		public Integer getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted;

		public Integer getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted;
		}

		public Float Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent;
		}

		public Float Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent;

		public Float getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index;

		public Integer getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index;
		}

		public Integer Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood;

		public Integer getTotal_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood() {
			return this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood;
		}

		public Integer Respondent_Occupation_Management_Occupations_Unwgtd;

		public Integer getRespondent_Occupation_Management_Occupations_Unwgtd() {
			return this.Respondent_Occupation_Management_Occupations_Unwgtd;
		}

		public Integer Respondent_Occupation_Management_Occupations_Weighted;

		public Integer getRespondent_Occupation_Management_Occupations_Weighted() {
			return this.Respondent_Occupation_Management_Occupations_Weighted;
		}

		public Float Respondent_Occupation_Management_Occupations_Horz_percent;

		public Float getRespondent_Occupation_Management_Occupations_Horz_percent() {
			return this.Respondent_Occupation_Management_Occupations_Horz_percent;
		}

		public Float Respondent_Occupation_Management_Occupations_Vert_percent;

		public Float getRespondent_Occupation_Management_Occupations_Vert_percent() {
			return this.Respondent_Occupation_Management_Occupations_Vert_percent;
		}

		public Integer Respondent_Occupation_Management_Occupations_Index;

		public Integer getRespondent_Occupation_Management_Occupations_Index() {
			return this.Respondent_Occupation_Management_Occupations_Index;
		}

		public Integer Respondent_Occupation_Management_Occupations_Likelihood;

		public Integer getRespondent_Occupation_Management_Occupations_Likelihood() {
			return this.Respondent_Occupation_Management_Occupations_Likelihood;
		}

		public Integer Business_and_Financial_Operations_Occupations_Unwgtd;

		public Integer getBusiness_and_Financial_Operations_Occupations_Unwgtd() {
			return this.Business_and_Financial_Operations_Occupations_Unwgtd;
		}

		public Integer Business_and_Financial_Operations_Occupations_Weighted;

		public Integer getBusiness_and_Financial_Operations_Occupations_Weighted() {
			return this.Business_and_Financial_Operations_Occupations_Weighted;
		}

		public Float Business_and_Financial_Operations_Occupations_Horz_percent;

		public Float getBusiness_and_Financial_Operations_Occupations_Horz_percent() {
			return this.Business_and_Financial_Operations_Occupations_Horz_percent;
		}

		public Float Business_and_Financial_Operations_Occupations_Vert_percent;

		public Float getBusiness_and_Financial_Operations_Occupations_Vert_percent() {
			return this.Business_and_Financial_Operations_Occupations_Vert_percent;
		}

		public Integer Business_and_Financial_Operations_Occupations_Index;

		public Integer getBusiness_and_Financial_Operations_Occupations_Index() {
			return this.Business_and_Financial_Operations_Occupations_Index;
		}

		public Integer Business_and_Financial_Operations_Occupations_Likelihood;

		public Integer getBusiness_and_Financial_Operations_Occupations_Likelihood() {
			return this.Business_and_Financial_Operations_Occupations_Likelihood;
		}

		public Integer Computer_and_Mathematical_Occupations_Unwgtd;

		public Integer getComputer_and_Mathematical_Occupations_Unwgtd() {
			return this.Computer_and_Mathematical_Occupations_Unwgtd;
		}

		public Integer Computer_and_Mathematical_Occupations_Weighted;

		public Integer getComputer_and_Mathematical_Occupations_Weighted() {
			return this.Computer_and_Mathematical_Occupations_Weighted;
		}

		public Float Computer_and_Mathematical_Occupations_Horz_percent;

		public Float getComputer_and_Mathematical_Occupations_Horz_percent() {
			return this.Computer_and_Mathematical_Occupations_Horz_percent;
		}

		public Float Computer_and_Mathematical_Occupations_Vert_percent;

		public Float getComputer_and_Mathematical_Occupations_Vert_percent() {
			return this.Computer_and_Mathematical_Occupations_Vert_percent;
		}

		public Integer Computer_and_Mathematical_Occupations_Index;

		public Integer getComputer_and_Mathematical_Occupations_Index() {
			return this.Computer_and_Mathematical_Occupations_Index;
		}

		public Integer Computer_and_Mathematical_Occupations_Likelihood;

		public Integer getComputer_and_Mathematical_Occupations_Likelihood() {
			return this.Computer_and_Mathematical_Occupations_Likelihood;
		}

		public Integer Life_Physical_and_Social_Science_Occupations_Unwgtd;

		public Integer getLife_Physical_and_Social_Science_Occupations_Unwgtd() {
			return this.Life_Physical_and_Social_Science_Occupations_Unwgtd;
		}

		public Integer Life_Physical_and_Social_Science_Occupations_Weighted;

		public Integer getLife_Physical_and_Social_Science_Occupations_Weighted() {
			return this.Life_Physical_and_Social_Science_Occupations_Weighted;
		}

		public Float Life_Physical_and_Social_Science_Occupations_Horz_percent;

		public Float getLife_Physical_and_Social_Science_Occupations_Horz_percent() {
			return this.Life_Physical_and_Social_Science_Occupations_Horz_percent;
		}

		public Float Life_Physical_and_Social_Science_Occupations_Vert_percent;

		public Float getLife_Physical_and_Social_Science_Occupations_Vert_percent() {
			return this.Life_Physical_and_Social_Science_Occupations_Vert_percent;
		}

		public Integer Life_Physical_and_Social_Science_Occupations_Index;

		public Integer getLife_Physical_and_Social_Science_Occupations_Index() {
			return this.Life_Physical_and_Social_Science_Occupations_Index;
		}

		public Integer Life_Physical_and_Social_Science_Occupations_Likelihood;

		public Integer getLife_Physical_and_Social_Science_Occupations_Likelihood() {
			return this.Life_Physical_and_Social_Science_Occupations_Likelihood;
		}

		public Integer Legal_Occupations_Unwgtd;

		public Integer getLegal_Occupations_Unwgtd() {
			return this.Legal_Occupations_Unwgtd;
		}

		public Integer Legal_Occupations_Weighted;

		public Integer getLegal_Occupations_Weighted() {
			return this.Legal_Occupations_Weighted;
		}

		public Float Legal_Occupations_Horz_percent;

		public Float getLegal_Occupations_Horz_percent() {
			return this.Legal_Occupations_Horz_percent;
		}

		public Float Legal_Occupations_Vert_percent;

		public Float getLegal_Occupations_Vert_percent() {
			return this.Legal_Occupations_Vert_percent;
		}

		public Integer Legal_Occupations_Index;

		public Integer getLegal_Occupations_Index() {
			return this.Legal_Occupations_Index;
		}

		public Integer Legal_Occupations_Likelihood;

		public Integer getLegal_Occupations_Likelihood() {
			return this.Legal_Occupations_Likelihood;
		}

		public Integer Healthcare_Practitioner_and_Technical_Unwgtd;

		public Integer getHealthcare_Practitioner_and_Technical_Unwgtd() {
			return this.Healthcare_Practitioner_and_Technical_Unwgtd;
		}

		public Integer Healthcare_Practitioner_and_Technical_Weighted;

		public Integer getHealthcare_Practitioner_and_Technical_Weighted() {
			return this.Healthcare_Practitioner_and_Technical_Weighted;
		}

		public Float Healthcare_Practitioner_and_Technical_Horz_percent;

		public Float getHealthcare_Practitioner_and_Technical_Horz_percent() {
			return this.Healthcare_Practitioner_and_Technical_Horz_percent;
		}

		public Float Healthcare_Practitioner_and_Technical_Vert_percent;

		public Float getHealthcare_Practitioner_and_Technical_Vert_percent() {
			return this.Healthcare_Practitioner_and_Technical_Vert_percent;
		}

		public Integer Healthcare_Practitioner_and_Technical_Index;

		public Integer getHealthcare_Practitioner_and_Technical_Index() {
			return this.Healthcare_Practitioner_and_Technical_Index;
		}

		public Integer Healthcare_Practitioner_and_Technical_Likelihood;

		public Integer getHealthcare_Practitioner_and_Technical_Likelihood() {
			return this.Healthcare_Practitioner_and_Technical_Likelihood;
		}

		public Integer Healthcare_Support_Occupations_Unwgtd;

		public Integer getHealthcare_Support_Occupations_Unwgtd() {
			return this.Healthcare_Support_Occupations_Unwgtd;
		}

		public Integer Healthcare_Support_Occupations_Weighted;

		public Integer getHealthcare_Support_Occupations_Weighted() {
			return this.Healthcare_Support_Occupations_Weighted;
		}

		public Float Healthcare_Support_Occupations_Horz_percent;

		public Float getHealthcare_Support_Occupations_Horz_percent() {
			return this.Healthcare_Support_Occupations_Horz_percent;
		}

		public Float Healthcare_Support_Occupations_Vert_percent;

		public Float getHealthcare_Support_Occupations_Vert_percent() {
			return this.Healthcare_Support_Occupations_Vert_percent;
		}

		public Integer Healthcare_Support_Occupations_Index;

		public Integer getHealthcare_Support_Occupations_Index() {
			return this.Healthcare_Support_Occupations_Index;
		}

		public Integer Healthcare_Support_Occupations_Likelihood;

		public Integer getHealthcare_Support_Occupations_Likelihood() {
			return this.Healthcare_Support_Occupations_Likelihood;
		}

		public Integer Food_Preparation_Serving_Related_Occupations_Unwgtd;

		public Integer getFood_Preparation_Serving_Related_Occupations_Unwgtd() {
			return this.Food_Preparation_Serving_Related_Occupations_Unwgtd;
		}

		public Integer Food_Preparation_Serving_Related_Occupations_Weighted;

		public Integer getFood_Preparation_Serving_Related_Occupations_Weighted() {
			return this.Food_Preparation_Serving_Related_Occupations_Weighted;
		}

		public Float Food_Preparation_Serving_Related_Occupations_Horz_percent;

		public Float getFood_Preparation_Serving_Related_Occupations_Horz_percent() {
			return this.Food_Preparation_Serving_Related_Occupations_Horz_percent;
		}

		public Float Food_Preparation_Serving_Related_Occupations_Vert_percent;

		public Float getFood_Preparation_Serving_Related_Occupations_Vert_percent() {
			return this.Food_Preparation_Serving_Related_Occupations_Vert_percent;
		}

		public Integer Food_Preparation_Serving_Related_Occupations_Index;

		public Integer getFood_Preparation_Serving_Related_Occupations_Index() {
			return this.Food_Preparation_Serving_Related_Occupations_Index;
		}

		public Integer Food_Preparation_Serving_Related_Occupations_Likelihood;

		public Integer getFood_Preparation_Serving_Related_Occupations_Likelihood() {
			return this.Food_Preparation_Serving_Related_Occupations_Likelihood;
		}

		public Integer Sales_and_Related_Occupations_Unwgtd;

		public Integer getSales_and_Related_Occupations_Unwgtd() {
			return this.Sales_and_Related_Occupations_Unwgtd;
		}

		public Integer Sales_and_Related_Occupations_Weighted;

		public Integer getSales_and_Related_Occupations_Weighted() {
			return this.Sales_and_Related_Occupations_Weighted;
		}

		public Float Sales_and_Related_Occupations_Horz_percent;

		public Float getSales_and_Related_Occupations_Horz_percent() {
			return this.Sales_and_Related_Occupations_Horz_percent;
		}

		public Float Sales_and_Related_Occupations_Vert_percent;

		public Float getSales_and_Related_Occupations_Vert_percent() {
			return this.Sales_and_Related_Occupations_Vert_percent;
		}

		public Integer Sales_and_Related_Occupations_Index;

		public Integer getSales_and_Related_Occupations_Index() {
			return this.Sales_and_Related_Occupations_Index;
		}

		public Integer Sales_and_Related_Occupations_Likelihood;

		public Integer getSales_and_Related_Occupations_Likelihood() {
			return this.Sales_and_Related_Occupations_Likelihood;
		}

		public Integer Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd;

		public Integer getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd;
		}

		public Integer Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted;

		public Integer getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Weighted() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted;
		}

		public Float Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent;

		public Float getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent;
		}

		public Float Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent;

		public Float getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent;
		}

		public Integer Physical_Fitness_Regular_Exercise_Pgm_At_club_Index;

		public Integer getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Index() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Index;
		}

		public Integer Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood;

		public Integer getPhysical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood() {
			return this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood;
		}

		public Integer At_other_facility_Unwgtd;

		public Integer getAt_other_facility_Unwgtd() {
			return this.At_other_facility_Unwgtd;
		}

		public Integer At_other_facility_Weighted;

		public Integer getAt_other_facility_Weighted() {
			return this.At_other_facility_Weighted;
		}

		public Float At_other_facility_Horz_percent;

		public Float getAt_other_facility_Horz_percent() {
			return this.At_other_facility_Horz_percent;
		}

		public Float At_other_facility_Vert_percent;

		public Float getAt_other_facility_Vert_percent() {
			return this.At_other_facility_Vert_percent;
		}

		public Integer At_other_facility_Index;

		public Integer getAt_other_facility_Index() {
			return this.At_other_facility_Index;
		}

		public Integer At_other_facility_Likelihood;

		public Integer getAt_other_facility_Likelihood() {
			return this.At_other_facility_Likelihood;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_LOCAL_PROJECT_veriton_data.length) {
					if (length < 1024
							&& commonByteArray_LOCAL_PROJECT_veriton_data.length == 0) {
						commonByteArray_LOCAL_PROJECT_veriton_data = new byte[1024];
					} else {
						commonByteArray_LOCAL_PROJECT_veriton_data = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_LOCAL_PROJECT_veriton_data, 0,
						length);
				strReturn = new String(
						commonByteArray_LOCAL_PROJECT_veriton_data, 0, length,
						utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos)
				throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos)
				throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_LOCAL_PROJECT_veriton_data) {

				try {

					int length = 0;

					this.Columns_veitone = readString(dis);

					this.all_Unwgtd = readInteger(dis);

					this.all_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.all_Vert_percent = null;
					} else {
						this.all_Vert_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.all_Percent_Value_Present = null;
					} else {
						this.all_Percent_Value_Present = dis.readFloat();
					}

					this.Men_Unwgtd = readInteger(dis);

					this.Men_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Men_Horz_percent = null;
					} else {
						this.Men_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Men_Vert_percent = null;
					} else {
						this.Men_Vert_percent = dis.readFloat();
					}

					this.Men_Index = readInteger(dis);

					this.Men_Likelihood = readInteger(dis);

					this.Women_Unwgtd = readInteger(dis);

					this.Women_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Women_Horz_percent = null;
					} else {
						this.Women_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Women_Vert_percent = null;
					} else {
						this.Women_Vert_percent = dis.readFloat();
					}

					this.Women_Index = readInteger(dis);

					this.Women_Likelihood = readInteger(dis);

					this.Age_18_24_Unwgtd = readInteger(dis);

					this.Age_18_24_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_18_24_Horz_percent = null;
					} else {
						this.Age_18_24_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_18_24_Vert_percent = null;
					} else {
						this.Age_18_24_Vert_percent = dis.readFloat();
					}

					this.Age_18_24_Index = readInteger(dis);

					this.Age_18_24_Likelihood = readInteger(dis);

					this.Age_25_34_Unwgtd = readInteger(dis);

					this.Age_25_34_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_25_34_Horz_percent = null;
					} else {
						this.Age_25_34_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_25_34_Vert_percent = null;
					} else {
						this.Age_25_34_Vert_percent = dis.readFloat();
					}

					this.Age_25_34_Index = readInteger(dis);

					this.Age_25_34_Likelihood = readInteger(dis);

					this.Age_35_44_Unwgtd = readInteger(dis);

					this.Age_35_44_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_35_44_Horz_percent = null;
					} else {
						this.Age_35_44_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_35_44_Vert_percent = null;
					} else {
						this.Age_35_44_Vert_percent = dis.readFloat();
					}

					this.Age_35_44_Index = readInteger(dis);

					this.Age_35_44_Likelihood = readInteger(dis);

					this.Age_45_54_Unwgtd = readInteger(dis);

					this.Age_45_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_45_54_Horz_percent = null;
					} else {
						this.Age_45_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_45_54_Vert_percent = null;
					} else {
						this.Age_45_54_Vert_percent = dis.readFloat();
					}

					this.Age_45_54_Index = readInteger(dis);

					this.Age_45_54_Likelihood = readInteger(dis);

					this.Age_55_64_Unwgtd = readInteger(dis);

					this.Age_55_64_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_55_64_Horz_percent = null;
					} else {
						this.Age_55_64_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_55_64_Vert_percent = null;
					} else {
						this.Age_55_64_Vert_percent = dis.readFloat();
					}

					this.Age_55_64_Index = readInteger(dis);

					this.Age_55_64_Likelihood = readInteger(dis);

					this.Age_65_above_Unwgtd = readInteger(dis);

					this.Age_65_above_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Age_65_above_Horz_percent = null;
					} else {
						this.Age_65_above_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Age_65_above_Vert_percent = null;
					} else {
						this.Age_65_above_Vert_percent = dis.readFloat();
					}

					this.Age_65_above_Index = readInteger(dis);

					this.Age_65_above_Likelihood = readInteger(dis);

					this.Adults_18_34_Unwgtd = readInteger(dis);

					this.Adults_18_34_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Adults_18_34_Horz_percent = null;
					} else {
						this.Adults_18_34_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Adults_18_34_Vert_percent = null;
					} else {
						this.Adults_18_34_Vert_percent = dis.readFloat();
					}

					this.Adults_18_34_Index = readInteger(dis);

					this.Adults_18_34_Likelihood = readInteger(dis);

					this.Adults_18_49_Unwgtd = readInteger(dis);

					this.Adults_18_49_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Adults_18_49_Horz_percent = null;
					} else {
						this.Adults_18_49_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Adults_18_49_Vert_percent = null;
					} else {
						this.Adults_18_49_Vert_percent = dis.readFloat();
					}

					this.Adults_18_49_Index = readInteger(dis);

					this.Adults_18_49_Likelihood = readInteger(dis);

					this.Adults_25_54_Unwgtd = readInteger(dis);

					this.Adults_25_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Adults_25_54_Horz_percent = null;
					} else {
						this.Adults_25_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Adults_25_54_Vert_percent = null;
					} else {
						this.Adults_25_54_Vert_percent = dis.readFloat();
					}

					this.Adults_25_54_Index = readInteger(dis);

					this.Adults_25_54_Likelihood = readInteger(dis);

					this.Adults_35_54_Unwgtd = readInteger(dis);

					this.Adults_35_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Adults_35_54_Horz_percent = null;
					} else {
						this.Adults_35_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Adults_35_54_Vert_percent = null;
					} else {
						this.Adults_35_54_Vert_percent = dis.readFloat();
					}

					this.Adults_35_54_Index = readInteger(dis);

					this.Adults_35_54_Likelihood = readInteger(dis);

					this.Men_18_34_Unwgtd = readInteger(dis);

					this.Men_18_34_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Men_18_34_Horz_percent = null;
					} else {
						this.Men_18_34_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Men_18_34_Vert_percent = null;
					} else {
						this.Men_18_34_Vert_percent = dis.readFloat();
					}

					this.Men_18_34_Index = readInteger(dis);

					this.Men_18_34_Likelihood = readInteger(dis);

					this.Men_18_49_Unwgtd = readInteger(dis);

					this.Men_18_49_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Men_18_49_Horz_percent = null;
					} else {
						this.Men_18_49_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Men_18_49_Vert_percent = null;
					} else {
						this.Men_18_49_Vert_percent = dis.readFloat();
					}

					this.Men_18_49_Index = readInteger(dis);

					this.Men_18_49_Likelihood = readInteger(dis);

					this.Men_25_54_Unwgtd = readInteger(dis);

					this.Men_25_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Men_25_54_Horz_percent = null;
					} else {
						this.Men_25_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Men_25_54_Vert_percent = null;
					} else {
						this.Men_25_54_Vert_percent = dis.readFloat();
					}

					this.Men_25_54_Index = readInteger(dis);

					this.Men_25_54_Likelihood = readInteger(dis);

					this.Men_35_54_Unwgtd = readInteger(dis);

					this.Men_35_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Men_35_54_Horz_percent = null;
					} else {
						this.Men_35_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Men_35_54_Vert_percent = null;
					} else {
						this.Men_35_54_Vert_percent = dis.readFloat();
					}

					this.Men_35_54_Index = readInteger(dis);

					this.Men_35_54_Likelihood = readInteger(dis);

					this.Women_18_34_Unwgtd = readInteger(dis);

					this.Women_18_34_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Women_18_34_Horz_percent = null;
					} else {
						this.Women_18_34_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Women_18_34_Vert_percent = null;
					} else {
						this.Women_18_34_Vert_percent = dis.readFloat();
					}

					this.Women_18_34_Index = readInteger(dis);

					this.Women_18_34_Likelihood = readInteger(dis);

					this.Women_18_49_Unwgtd = readInteger(dis);

					this.Women_18_49_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Women_18_49_Horz_percent = null;
					} else {
						this.Women_18_49_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Women_18_49_Vert_percent = null;
					} else {
						this.Women_18_49_Vert_percent = dis.readFloat();
					}

					this.Women_18_49_Index = readInteger(dis);

					this.Women_18_49_Likelihood = readInteger(dis);

					this.Women_25_54_Unwgtd = readInteger(dis);

					this.Women_25_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Women_25_54_Horz_percent = null;
					} else {
						this.Women_25_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Women_25_54_Vert_percent = null;
					} else {
						this.Women_25_54_Vert_percent = dis.readFloat();
					}

					this.Women_25_54_Index = readInteger(dis);

					this.Women_25_54_Likelihood = readInteger(dis);

					this.Women_35_54_Unwgtd = readInteger(dis);

					this.Women_35_54_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Women_35_54_Horz_percent = null;
					} else {
						this.Women_35_54_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Women_35_54_Vert_percent = null;
					} else {
						this.Women_35_54_Vert_percent = dis.readFloat();
					}

					this.Women_35_54_Index = readInteger(dis);

					this.Women_35_54_Likelihood = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent = dis
								.readFloat();
					}

					this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent = dis
								.readFloat();
					}

					this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent = dis
								.readFloat();
					}

					this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent = dis
								.readFloat();
					}

					this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent = null;
					} else {
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent = dis
								.readFloat();
					}

					this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index = readInteger(dis);

					this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood = readInteger(dis);

					this.Respondent_Occupation_Management_Occupations_Unwgtd = readInteger(dis);

					this.Respondent_Occupation_Management_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Respondent_Occupation_Management_Occupations_Horz_percent = null;
					} else {
						this.Respondent_Occupation_Management_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Respondent_Occupation_Management_Occupations_Vert_percent = null;
					} else {
						this.Respondent_Occupation_Management_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Respondent_Occupation_Management_Occupations_Index = readInteger(dis);

					this.Respondent_Occupation_Management_Occupations_Likelihood = readInteger(dis);

					this.Business_and_Financial_Operations_Occupations_Unwgtd = readInteger(dis);

					this.Business_and_Financial_Operations_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Business_and_Financial_Operations_Occupations_Horz_percent = null;
					} else {
						this.Business_and_Financial_Operations_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Business_and_Financial_Operations_Occupations_Vert_percent = null;
					} else {
						this.Business_and_Financial_Operations_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Business_and_Financial_Operations_Occupations_Index = readInteger(dis);

					this.Business_and_Financial_Operations_Occupations_Likelihood = readInteger(dis);

					this.Computer_and_Mathematical_Occupations_Unwgtd = readInteger(dis);

					this.Computer_and_Mathematical_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Computer_and_Mathematical_Occupations_Horz_percent = null;
					} else {
						this.Computer_and_Mathematical_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Computer_and_Mathematical_Occupations_Vert_percent = null;
					} else {
						this.Computer_and_Mathematical_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Computer_and_Mathematical_Occupations_Index = readInteger(dis);

					this.Computer_and_Mathematical_Occupations_Likelihood = readInteger(dis);

					this.Life_Physical_and_Social_Science_Occupations_Unwgtd = readInteger(dis);

					this.Life_Physical_and_Social_Science_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Life_Physical_and_Social_Science_Occupations_Horz_percent = null;
					} else {
						this.Life_Physical_and_Social_Science_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Life_Physical_and_Social_Science_Occupations_Vert_percent = null;
					} else {
						this.Life_Physical_and_Social_Science_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Life_Physical_and_Social_Science_Occupations_Index = readInteger(dis);

					this.Life_Physical_and_Social_Science_Occupations_Likelihood = readInteger(dis);

					this.Legal_Occupations_Unwgtd = readInteger(dis);

					this.Legal_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Legal_Occupations_Horz_percent = null;
					} else {
						this.Legal_Occupations_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Legal_Occupations_Vert_percent = null;
					} else {
						this.Legal_Occupations_Vert_percent = dis.readFloat();
					}

					this.Legal_Occupations_Index = readInteger(dis);

					this.Legal_Occupations_Likelihood = readInteger(dis);

					this.Healthcare_Practitioner_and_Technical_Unwgtd = readInteger(dis);

					this.Healthcare_Practitioner_and_Technical_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Healthcare_Practitioner_and_Technical_Horz_percent = null;
					} else {
						this.Healthcare_Practitioner_and_Technical_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Healthcare_Practitioner_and_Technical_Vert_percent = null;
					} else {
						this.Healthcare_Practitioner_and_Technical_Vert_percent = dis
								.readFloat();
					}

					this.Healthcare_Practitioner_and_Technical_Index = readInteger(dis);

					this.Healthcare_Practitioner_and_Technical_Likelihood = readInteger(dis);

					this.Healthcare_Support_Occupations_Unwgtd = readInteger(dis);

					this.Healthcare_Support_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Healthcare_Support_Occupations_Horz_percent = null;
					} else {
						this.Healthcare_Support_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Healthcare_Support_Occupations_Vert_percent = null;
					} else {
						this.Healthcare_Support_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Healthcare_Support_Occupations_Index = readInteger(dis);

					this.Healthcare_Support_Occupations_Likelihood = readInteger(dis);

					this.Food_Preparation_Serving_Related_Occupations_Unwgtd = readInteger(dis);

					this.Food_Preparation_Serving_Related_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Food_Preparation_Serving_Related_Occupations_Horz_percent = null;
					} else {
						this.Food_Preparation_Serving_Related_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Food_Preparation_Serving_Related_Occupations_Vert_percent = null;
					} else {
						this.Food_Preparation_Serving_Related_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Food_Preparation_Serving_Related_Occupations_Index = readInteger(dis);

					this.Food_Preparation_Serving_Related_Occupations_Likelihood = readInteger(dis);

					this.Sales_and_Related_Occupations_Unwgtd = readInteger(dis);

					this.Sales_and_Related_Occupations_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Sales_and_Related_Occupations_Horz_percent = null;
					} else {
						this.Sales_and_Related_Occupations_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Sales_and_Related_Occupations_Vert_percent = null;
					} else {
						this.Sales_and_Related_Occupations_Vert_percent = dis
								.readFloat();
					}

					this.Sales_and_Related_Occupations_Index = readInteger(dis);

					this.Sales_and_Related_Occupations_Likelihood = readInteger(dis);

					this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd = readInteger(dis);

					this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent = null;
					} else {
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent = dis
								.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent = null;
					} else {
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent = dis
								.readFloat();
					}

					this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Index = readInteger(dis);

					this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood = readInteger(dis);

					this.At_other_facility_Unwgtd = readInteger(dis);

					this.At_other_facility_Weighted = readInteger(dis);

					length = dis.readByte();
					if (length == -1) {
						this.At_other_facility_Horz_percent = null;
					} else {
						this.At_other_facility_Horz_percent = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.At_other_facility_Vert_percent = null;
					} else {
						this.At_other_facility_Vert_percent = dis.readFloat();
					}

					this.At_other_facility_Index = readInteger(dis);

					this.At_other_facility_Likelihood = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Columns_veitone, dos);

				// Integer

				writeInteger(this.all_Unwgtd, dos);

				// Integer

				writeInteger(this.all_Weighted, dos);

				// Float

				if (this.all_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.all_Vert_percent);
				}

				// Float

				if (this.all_Percent_Value_Present == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.all_Percent_Value_Present);
				}

				// Integer

				writeInteger(this.Men_Unwgtd, dos);

				// Integer

				writeInteger(this.Men_Weighted, dos);

				// Float

				if (this.Men_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_Horz_percent);
				}

				// Float

				if (this.Men_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_Vert_percent);
				}

				// Integer

				writeInteger(this.Men_Index, dos);

				// Integer

				writeInteger(this.Men_Likelihood, dos);

				// Integer

				writeInteger(this.Women_Unwgtd, dos);

				// Integer

				writeInteger(this.Women_Weighted, dos);

				// Float

				if (this.Women_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_Horz_percent);
				}

				// Float

				if (this.Women_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_Vert_percent);
				}

				// Integer

				writeInteger(this.Women_Index, dos);

				// Integer

				writeInteger(this.Women_Likelihood, dos);

				// Integer

				writeInteger(this.Age_18_24_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_18_24_Weighted, dos);

				// Float

				if (this.Age_18_24_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_18_24_Horz_percent);
				}

				// Float

				if (this.Age_18_24_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_18_24_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_18_24_Index, dos);

				// Integer

				writeInteger(this.Age_18_24_Likelihood, dos);

				// Integer

				writeInteger(this.Age_25_34_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_25_34_Weighted, dos);

				// Float

				if (this.Age_25_34_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_25_34_Horz_percent);
				}

				// Float

				if (this.Age_25_34_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_25_34_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_25_34_Index, dos);

				// Integer

				writeInteger(this.Age_25_34_Likelihood, dos);

				// Integer

				writeInteger(this.Age_35_44_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_35_44_Weighted, dos);

				// Float

				if (this.Age_35_44_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_35_44_Horz_percent);
				}

				// Float

				if (this.Age_35_44_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_35_44_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_35_44_Index, dos);

				// Integer

				writeInteger(this.Age_35_44_Likelihood, dos);

				// Integer

				writeInteger(this.Age_45_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_45_54_Weighted, dos);

				// Float

				if (this.Age_45_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_45_54_Horz_percent);
				}

				// Float

				if (this.Age_45_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_45_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_45_54_Index, dos);

				// Integer

				writeInteger(this.Age_45_54_Likelihood, dos);

				// Integer

				writeInteger(this.Age_55_64_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_55_64_Weighted, dos);

				// Float

				if (this.Age_55_64_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_55_64_Horz_percent);
				}

				// Float

				if (this.Age_55_64_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_55_64_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_55_64_Index, dos);

				// Integer

				writeInteger(this.Age_55_64_Likelihood, dos);

				// Integer

				writeInteger(this.Age_65_above_Unwgtd, dos);

				// Integer

				writeInteger(this.Age_65_above_Weighted, dos);

				// Float

				if (this.Age_65_above_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_65_above_Horz_percent);
				}

				// Float

				if (this.Age_65_above_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Age_65_above_Vert_percent);
				}

				// Integer

				writeInteger(this.Age_65_above_Index, dos);

				// Integer

				writeInteger(this.Age_65_above_Likelihood, dos);

				// Integer

				writeInteger(this.Adults_18_34_Unwgtd, dos);

				// Integer

				writeInteger(this.Adults_18_34_Weighted, dos);

				// Float

				if (this.Adults_18_34_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_18_34_Horz_percent);
				}

				// Float

				if (this.Adults_18_34_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_18_34_Vert_percent);
				}

				// Integer

				writeInteger(this.Adults_18_34_Index, dos);

				// Integer

				writeInteger(this.Adults_18_34_Likelihood, dos);

				// Integer

				writeInteger(this.Adults_18_49_Unwgtd, dos);

				// Integer

				writeInteger(this.Adults_18_49_Weighted, dos);

				// Float

				if (this.Adults_18_49_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_18_49_Horz_percent);
				}

				// Float

				if (this.Adults_18_49_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_18_49_Vert_percent);
				}

				// Integer

				writeInteger(this.Adults_18_49_Index, dos);

				// Integer

				writeInteger(this.Adults_18_49_Likelihood, dos);

				// Integer

				writeInteger(this.Adults_25_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Adults_25_54_Weighted, dos);

				// Float

				if (this.Adults_25_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_25_54_Horz_percent);
				}

				// Float

				if (this.Adults_25_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_25_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Adults_25_54_Index, dos);

				// Integer

				writeInteger(this.Adults_25_54_Likelihood, dos);

				// Integer

				writeInteger(this.Adults_35_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Adults_35_54_Weighted, dos);

				// Float

				if (this.Adults_35_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_35_54_Horz_percent);
				}

				// Float

				if (this.Adults_35_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Adults_35_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Adults_35_54_Index, dos);

				// Integer

				writeInteger(this.Adults_35_54_Likelihood, dos);

				// Integer

				writeInteger(this.Men_18_34_Unwgtd, dos);

				// Integer

				writeInteger(this.Men_18_34_Weighted, dos);

				// Float

				if (this.Men_18_34_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_18_34_Horz_percent);
				}

				// Float

				if (this.Men_18_34_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_18_34_Vert_percent);
				}

				// Integer

				writeInteger(this.Men_18_34_Index, dos);

				// Integer

				writeInteger(this.Men_18_34_Likelihood, dos);

				// Integer

				writeInteger(this.Men_18_49_Unwgtd, dos);

				// Integer

				writeInteger(this.Men_18_49_Weighted, dos);

				// Float

				if (this.Men_18_49_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_18_49_Horz_percent);
				}

				// Float

				if (this.Men_18_49_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_18_49_Vert_percent);
				}

				// Integer

				writeInteger(this.Men_18_49_Index, dos);

				// Integer

				writeInteger(this.Men_18_49_Likelihood, dos);

				// Integer

				writeInteger(this.Men_25_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Men_25_54_Weighted, dos);

				// Float

				if (this.Men_25_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_25_54_Horz_percent);
				}

				// Float

				if (this.Men_25_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_25_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Men_25_54_Index, dos);

				// Integer

				writeInteger(this.Men_25_54_Likelihood, dos);

				// Integer

				writeInteger(this.Men_35_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Men_35_54_Weighted, dos);

				// Float

				if (this.Men_35_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_35_54_Horz_percent);
				}

				// Float

				if (this.Men_35_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Men_35_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Men_35_54_Index, dos);

				// Integer

				writeInteger(this.Men_35_54_Likelihood, dos);

				// Integer

				writeInteger(this.Women_18_34_Unwgtd, dos);

				// Integer

				writeInteger(this.Women_18_34_Weighted, dos);

				// Float

				if (this.Women_18_34_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_18_34_Horz_percent);
				}

				// Float

				if (this.Women_18_34_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_18_34_Vert_percent);
				}

				// Integer

				writeInteger(this.Women_18_34_Index, dos);

				// Integer

				writeInteger(this.Women_18_34_Likelihood, dos);

				// Integer

				writeInteger(this.Women_18_49_Unwgtd, dos);

				// Integer

				writeInteger(this.Women_18_49_Weighted, dos);

				// Float

				if (this.Women_18_49_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_18_49_Horz_percent);
				}

				// Float

				if (this.Women_18_49_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_18_49_Vert_percent);
				}

				// Integer

				writeInteger(this.Women_18_49_Index, dos);

				// Integer

				writeInteger(this.Women_18_49_Likelihood, dos);

				// Integer

				writeInteger(this.Women_25_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Women_25_54_Weighted, dos);

				// Float

				if (this.Women_25_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_25_54_Horz_percent);
				}

				// Float

				if (this.Women_25_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_25_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Women_25_54_Index, dos);

				// Integer

				writeInteger(this.Women_25_54_Likelihood, dos);

				// Integer

				writeInteger(this.Women_35_54_Unwgtd, dos);

				// Integer

				writeInteger(this.Women_35_54_Weighted, dos);

				// Float

				if (this.Women_35_54_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_35_54_Horz_percent);
				}

				// Float

				if (this.Women_35_54_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Women_35_54_Vert_percent);
				}

				// Integer

				writeInteger(this.Women_35_54_Index, dos);

				// Integer

				writeInteger(this.Women_35_54_Likelihood, dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted,
						dos);

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent);
				}

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted,
						dos);

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent);
				}

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted,
						dos);

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent);
				}

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted,
						dos);

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent);
				}

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted,
						dos);

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent);
				}

				// Float

				if (this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index,
						dos);

				// Integer

				writeInteger(
						this.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Respondent_Occupation_Management_Occupations_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Respondent_Occupation_Management_Occupations_Weighted,
						dos);

				// Float

				if (this.Respondent_Occupation_Management_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Respondent_Occupation_Management_Occupations_Horz_percent);
				}

				// Float

				if (this.Respondent_Occupation_Management_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Respondent_Occupation_Management_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Respondent_Occupation_Management_Occupations_Index,
						dos);

				// Integer

				writeInteger(
						this.Respondent_Occupation_Management_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Business_and_Financial_Operations_Occupations_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Business_and_Financial_Operations_Occupations_Weighted,
						dos);

				// Float

				if (this.Business_and_Financial_Operations_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Business_and_Financial_Operations_Occupations_Horz_percent);
				}

				// Float

				if (this.Business_and_Financial_Operations_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Business_and_Financial_Operations_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Business_and_Financial_Operations_Occupations_Index,
						dos);

				// Integer

				writeInteger(
						this.Business_and_Financial_Operations_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(this.Computer_and_Mathematical_Occupations_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Computer_and_Mathematical_Occupations_Weighted,
						dos);

				// Float

				if (this.Computer_and_Mathematical_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Computer_and_Mathematical_Occupations_Horz_percent);
				}

				// Float

				if (this.Computer_and_Mathematical_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Computer_and_Mathematical_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(this.Computer_and_Mathematical_Occupations_Index,
						dos);

				// Integer

				writeInteger(
						this.Computer_and_Mathematical_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Life_Physical_and_Social_Science_Occupations_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Life_Physical_and_Social_Science_Occupations_Weighted,
						dos);

				// Float

				if (this.Life_Physical_and_Social_Science_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Life_Physical_and_Social_Science_Occupations_Horz_percent);
				}

				// Float

				if (this.Life_Physical_and_Social_Science_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Life_Physical_and_Social_Science_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Life_Physical_and_Social_Science_Occupations_Index,
						dos);

				// Integer

				writeInteger(
						this.Life_Physical_and_Social_Science_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(this.Legal_Occupations_Unwgtd, dos);

				// Integer

				writeInteger(this.Legal_Occupations_Weighted, dos);

				// Float

				if (this.Legal_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Legal_Occupations_Horz_percent);
				}

				// Float

				if (this.Legal_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Legal_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(this.Legal_Occupations_Index, dos);

				// Integer

				writeInteger(this.Legal_Occupations_Likelihood, dos);

				// Integer

				writeInteger(this.Healthcare_Practitioner_and_Technical_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Healthcare_Practitioner_and_Technical_Weighted,
						dos);

				// Float

				if (this.Healthcare_Practitioner_and_Technical_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Healthcare_Practitioner_and_Technical_Horz_percent);
				}

				// Float

				if (this.Healthcare_Practitioner_and_Technical_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Healthcare_Practitioner_and_Technical_Vert_percent);
				}

				// Integer

				writeInteger(this.Healthcare_Practitioner_and_Technical_Index,
						dos);

				// Integer

				writeInteger(
						this.Healthcare_Practitioner_and_Technical_Likelihood,
						dos);

				// Integer

				writeInteger(this.Healthcare_Support_Occupations_Unwgtd, dos);

				// Integer

				writeInteger(this.Healthcare_Support_Occupations_Weighted, dos);

				// Float

				if (this.Healthcare_Support_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Healthcare_Support_Occupations_Horz_percent);
				}

				// Float

				if (this.Healthcare_Support_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Healthcare_Support_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(this.Healthcare_Support_Occupations_Index, dos);

				// Integer

				writeInteger(this.Healthcare_Support_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(
						this.Food_Preparation_Serving_Related_Occupations_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Food_Preparation_Serving_Related_Occupations_Weighted,
						dos);

				// Float

				if (this.Food_Preparation_Serving_Related_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Food_Preparation_Serving_Related_Occupations_Horz_percent);
				}

				// Float

				if (this.Food_Preparation_Serving_Related_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Food_Preparation_Serving_Related_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Food_Preparation_Serving_Related_Occupations_Index,
						dos);

				// Integer

				writeInteger(
						this.Food_Preparation_Serving_Related_Occupations_Likelihood,
						dos);

				// Integer

				writeInteger(this.Sales_and_Related_Occupations_Unwgtd, dos);

				// Integer

				writeInteger(this.Sales_and_Related_Occupations_Weighted, dos);

				// Float

				if (this.Sales_and_Related_Occupations_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Sales_and_Related_Occupations_Horz_percent);
				}

				// Float

				if (this.Sales_and_Related_Occupations_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Sales_and_Related_Occupations_Vert_percent);
				}

				// Integer

				writeInteger(this.Sales_and_Related_Occupations_Index, dos);

				// Integer

				writeInteger(this.Sales_and_Related_Occupations_Likelihood, dos);

				// Integer

				writeInteger(
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd,
						dos);

				// Integer

				writeInteger(
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted,
						dos);

				// Float

				if (this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent);
				}

				// Float

				if (this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent);
				}

				// Integer

				writeInteger(
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Index,
						dos);

				// Integer

				writeInteger(
						this.Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood,
						dos);

				// Integer

				writeInteger(this.At_other_facility_Unwgtd, dos);

				// Integer

				writeInteger(this.At_other_facility_Weighted, dos);

				// Float

				if (this.At_other_facility_Horz_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.At_other_facility_Horz_percent);
				}

				// Float

				if (this.At_other_facility_Vert_percent == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.At_other_facility_Vert_percent);
				}

				// Integer

				writeInteger(this.At_other_facility_Index, dos);

				// Integer

				writeInteger(this.At_other_facility_Likelihood, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Columns_veitone=" + Columns_veitone);
			sb.append(",all_Unwgtd=" + String.valueOf(all_Unwgtd));
			sb.append(",all_Weighted=" + String.valueOf(all_Weighted));
			sb.append(",all_Vert_percent=" + String.valueOf(all_Vert_percent));
			sb.append(",all_Percent_Value_Present="
					+ String.valueOf(all_Percent_Value_Present));
			sb.append(",Men_Unwgtd=" + String.valueOf(Men_Unwgtd));
			sb.append(",Men_Weighted=" + String.valueOf(Men_Weighted));
			sb.append(",Men_Horz_percent=" + String.valueOf(Men_Horz_percent));
			sb.append(",Men_Vert_percent=" + String.valueOf(Men_Vert_percent));
			sb.append(",Men_Index=" + String.valueOf(Men_Index));
			sb.append(",Men_Likelihood=" + String.valueOf(Men_Likelihood));
			sb.append(",Women_Unwgtd=" + String.valueOf(Women_Unwgtd));
			sb.append(",Women_Weighted=" + String.valueOf(Women_Weighted));
			sb.append(",Women_Horz_percent="
					+ String.valueOf(Women_Horz_percent));
			sb.append(",Women_Vert_percent="
					+ String.valueOf(Women_Vert_percent));
			sb.append(",Women_Index=" + String.valueOf(Women_Index));
			sb.append(",Women_Likelihood=" + String.valueOf(Women_Likelihood));
			sb.append(",Age_18_24_Unwgtd=" + String.valueOf(Age_18_24_Unwgtd));
			sb.append(",Age_18_24_Weighted="
					+ String.valueOf(Age_18_24_Weighted));
			sb.append(",Age_18_24_Horz_percent="
					+ String.valueOf(Age_18_24_Horz_percent));
			sb.append(",Age_18_24_Vert_percent="
					+ String.valueOf(Age_18_24_Vert_percent));
			sb.append(",Age_18_24_Index=" + String.valueOf(Age_18_24_Index));
			sb.append(",Age_18_24_Likelihood="
					+ String.valueOf(Age_18_24_Likelihood));
			sb.append(",Age_25_34_Unwgtd=" + String.valueOf(Age_25_34_Unwgtd));
			sb.append(",Age_25_34_Weighted="
					+ String.valueOf(Age_25_34_Weighted));
			sb.append(",Age_25_34_Horz_percent="
					+ String.valueOf(Age_25_34_Horz_percent));
			sb.append(",Age_25_34_Vert_percent="
					+ String.valueOf(Age_25_34_Vert_percent));
			sb.append(",Age_25_34_Index=" + String.valueOf(Age_25_34_Index));
			sb.append(",Age_25_34_Likelihood="
					+ String.valueOf(Age_25_34_Likelihood));
			sb.append(",Age_35_44_Unwgtd=" + String.valueOf(Age_35_44_Unwgtd));
			sb.append(",Age_35_44_Weighted="
					+ String.valueOf(Age_35_44_Weighted));
			sb.append(",Age_35_44_Horz_percent="
					+ String.valueOf(Age_35_44_Horz_percent));
			sb.append(",Age_35_44_Vert_percent="
					+ String.valueOf(Age_35_44_Vert_percent));
			sb.append(",Age_35_44_Index=" + String.valueOf(Age_35_44_Index));
			sb.append(",Age_35_44_Likelihood="
					+ String.valueOf(Age_35_44_Likelihood));
			sb.append(",Age_45_54_Unwgtd=" + String.valueOf(Age_45_54_Unwgtd));
			sb.append(",Age_45_54_Weighted="
					+ String.valueOf(Age_45_54_Weighted));
			sb.append(",Age_45_54_Horz_percent="
					+ String.valueOf(Age_45_54_Horz_percent));
			sb.append(",Age_45_54_Vert_percent="
					+ String.valueOf(Age_45_54_Vert_percent));
			sb.append(",Age_45_54_Index=" + String.valueOf(Age_45_54_Index));
			sb.append(",Age_45_54_Likelihood="
					+ String.valueOf(Age_45_54_Likelihood));
			sb.append(",Age_55_64_Unwgtd=" + String.valueOf(Age_55_64_Unwgtd));
			sb.append(",Age_55_64_Weighted="
					+ String.valueOf(Age_55_64_Weighted));
			sb.append(",Age_55_64_Horz_percent="
					+ String.valueOf(Age_55_64_Horz_percent));
			sb.append(",Age_55_64_Vert_percent="
					+ String.valueOf(Age_55_64_Vert_percent));
			sb.append(",Age_55_64_Index=" + String.valueOf(Age_55_64_Index));
			sb.append(",Age_55_64_Likelihood="
					+ String.valueOf(Age_55_64_Likelihood));
			sb.append(",Age_65_above_Unwgtd="
					+ String.valueOf(Age_65_above_Unwgtd));
			sb.append(",Age_65_above_Weighted="
					+ String.valueOf(Age_65_above_Weighted));
			sb.append(",Age_65_above_Horz_percent="
					+ String.valueOf(Age_65_above_Horz_percent));
			sb.append(",Age_65_above_Vert_percent="
					+ String.valueOf(Age_65_above_Vert_percent));
			sb.append(",Age_65_above_Index="
					+ String.valueOf(Age_65_above_Index));
			sb.append(",Age_65_above_Likelihood="
					+ String.valueOf(Age_65_above_Likelihood));
			sb.append(",Adults_18_34_Unwgtd="
					+ String.valueOf(Adults_18_34_Unwgtd));
			sb.append(",Adults_18_34_Weighted="
					+ String.valueOf(Adults_18_34_Weighted));
			sb.append(",Adults_18_34_Horz_percent="
					+ String.valueOf(Adults_18_34_Horz_percent));
			sb.append(",Adults_18_34_Vert_percent="
					+ String.valueOf(Adults_18_34_Vert_percent));
			sb.append(",Adults_18_34_Index="
					+ String.valueOf(Adults_18_34_Index));
			sb.append(",Adults_18_34_Likelihood="
					+ String.valueOf(Adults_18_34_Likelihood));
			sb.append(",Adults_18_49_Unwgtd="
					+ String.valueOf(Adults_18_49_Unwgtd));
			sb.append(",Adults_18_49_Weighted="
					+ String.valueOf(Adults_18_49_Weighted));
			sb.append(",Adults_18_49_Horz_percent="
					+ String.valueOf(Adults_18_49_Horz_percent));
			sb.append(",Adults_18_49_Vert_percent="
					+ String.valueOf(Adults_18_49_Vert_percent));
			sb.append(",Adults_18_49_Index="
					+ String.valueOf(Adults_18_49_Index));
			sb.append(",Adults_18_49_Likelihood="
					+ String.valueOf(Adults_18_49_Likelihood));
			sb.append(",Adults_25_54_Unwgtd="
					+ String.valueOf(Adults_25_54_Unwgtd));
			sb.append(",Adults_25_54_Weighted="
					+ String.valueOf(Adults_25_54_Weighted));
			sb.append(",Adults_25_54_Horz_percent="
					+ String.valueOf(Adults_25_54_Horz_percent));
			sb.append(",Adults_25_54_Vert_percent="
					+ String.valueOf(Adults_25_54_Vert_percent));
			sb.append(",Adults_25_54_Index="
					+ String.valueOf(Adults_25_54_Index));
			sb.append(",Adults_25_54_Likelihood="
					+ String.valueOf(Adults_25_54_Likelihood));
			sb.append(",Adults_35_54_Unwgtd="
					+ String.valueOf(Adults_35_54_Unwgtd));
			sb.append(",Adults_35_54_Weighted="
					+ String.valueOf(Adults_35_54_Weighted));
			sb.append(",Adults_35_54_Horz_percent="
					+ String.valueOf(Adults_35_54_Horz_percent));
			sb.append(",Adults_35_54_Vert_percent="
					+ String.valueOf(Adults_35_54_Vert_percent));
			sb.append(",Adults_35_54_Index="
					+ String.valueOf(Adults_35_54_Index));
			sb.append(",Adults_35_54_Likelihood="
					+ String.valueOf(Adults_35_54_Likelihood));
			sb.append(",Men_18_34_Unwgtd=" + String.valueOf(Men_18_34_Unwgtd));
			sb.append(",Men_18_34_Weighted="
					+ String.valueOf(Men_18_34_Weighted));
			sb.append(",Men_18_34_Horz_percent="
					+ String.valueOf(Men_18_34_Horz_percent));
			sb.append(",Men_18_34_Vert_percent="
					+ String.valueOf(Men_18_34_Vert_percent));
			sb.append(",Men_18_34_Index=" + String.valueOf(Men_18_34_Index));
			sb.append(",Men_18_34_Likelihood="
					+ String.valueOf(Men_18_34_Likelihood));
			sb.append(",Men_18_49_Unwgtd=" + String.valueOf(Men_18_49_Unwgtd));
			sb.append(",Men_18_49_Weighted="
					+ String.valueOf(Men_18_49_Weighted));
			sb.append(",Men_18_49_Horz_percent="
					+ String.valueOf(Men_18_49_Horz_percent));
			sb.append(",Men_18_49_Vert_percent="
					+ String.valueOf(Men_18_49_Vert_percent));
			sb.append(",Men_18_49_Index=" + String.valueOf(Men_18_49_Index));
			sb.append(",Men_18_49_Likelihood="
					+ String.valueOf(Men_18_49_Likelihood));
			sb.append(",Men_25_54_Unwgtd=" + String.valueOf(Men_25_54_Unwgtd));
			sb.append(",Men_25_54_Weighted="
					+ String.valueOf(Men_25_54_Weighted));
			sb.append(",Men_25_54_Horz_percent="
					+ String.valueOf(Men_25_54_Horz_percent));
			sb.append(",Men_25_54_Vert_percent="
					+ String.valueOf(Men_25_54_Vert_percent));
			sb.append(",Men_25_54_Index=" + String.valueOf(Men_25_54_Index));
			sb.append(",Men_25_54_Likelihood="
					+ String.valueOf(Men_25_54_Likelihood));
			sb.append(",Men_35_54_Unwgtd=" + String.valueOf(Men_35_54_Unwgtd));
			sb.append(",Men_35_54_Weighted="
					+ String.valueOf(Men_35_54_Weighted));
			sb.append(",Men_35_54_Horz_percent="
					+ String.valueOf(Men_35_54_Horz_percent));
			sb.append(",Men_35_54_Vert_percent="
					+ String.valueOf(Men_35_54_Vert_percent));
			sb.append(",Men_35_54_Index=" + String.valueOf(Men_35_54_Index));
			sb.append(",Men_35_54_Likelihood="
					+ String.valueOf(Men_35_54_Likelihood));
			sb.append(",Women_18_34_Unwgtd="
					+ String.valueOf(Women_18_34_Unwgtd));
			sb.append(",Women_18_34_Weighted="
					+ String.valueOf(Women_18_34_Weighted));
			sb.append(",Women_18_34_Horz_percent="
					+ String.valueOf(Women_18_34_Horz_percent));
			sb.append(",Women_18_34_Vert_percent="
					+ String.valueOf(Women_18_34_Vert_percent));
			sb.append(",Women_18_34_Index=" + String.valueOf(Women_18_34_Index));
			sb.append(",Women_18_34_Likelihood="
					+ String.valueOf(Women_18_34_Likelihood));
			sb.append(",Women_18_49_Unwgtd="
					+ String.valueOf(Women_18_49_Unwgtd));
			sb.append(",Women_18_49_Weighted="
					+ String.valueOf(Women_18_49_Weighted));
			sb.append(",Women_18_49_Horz_percent="
					+ String.valueOf(Women_18_49_Horz_percent));
			sb.append(",Women_18_49_Vert_percent="
					+ String.valueOf(Women_18_49_Vert_percent));
			sb.append(",Women_18_49_Index=" + String.valueOf(Women_18_49_Index));
			sb.append(",Women_18_49_Likelihood="
					+ String.valueOf(Women_18_49_Likelihood));
			sb.append(",Women_25_54_Unwgtd="
					+ String.valueOf(Women_25_54_Unwgtd));
			sb.append(",Women_25_54_Weighted="
					+ String.valueOf(Women_25_54_Weighted));
			sb.append(",Women_25_54_Horz_percent="
					+ String.valueOf(Women_25_54_Horz_percent));
			sb.append(",Women_25_54_Vert_percent="
					+ String.valueOf(Women_25_54_Vert_percent));
			sb.append(",Women_25_54_Index=" + String.valueOf(Women_25_54_Index));
			sb.append(",Women_25_54_Likelihood="
					+ String.valueOf(Women_25_54_Likelihood));
			sb.append(",Women_35_54_Unwgtd="
					+ String.valueOf(Women_35_54_Unwgtd));
			sb.append(",Women_35_54_Weighted="
					+ String.valueOf(Women_35_54_Weighted));
			sb.append(",Women_35_54_Horz_percent="
					+ String.valueOf(Women_35_54_Horz_percent));
			sb.append(",Women_35_54_Vert_percent="
					+ String.valueOf(Women_35_54_Vert_percent));
			sb.append(",Women_35_54_Index=" + String.valueOf(Women_35_54_Index));
			sb.append(",Women_35_54_Likelihood="
					+ String.valueOf(Women_35_54_Likelihood));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index));
			sb.append(",Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index));
			sb.append(",Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood="
					+ String.valueOf(Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood));
			sb.append(",Respondent_Occupation_Management_Occupations_Unwgtd="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Unwgtd));
			sb.append(",Respondent_Occupation_Management_Occupations_Weighted="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Weighted));
			sb.append(",Respondent_Occupation_Management_Occupations_Horz_percent="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Horz_percent));
			sb.append(",Respondent_Occupation_Management_Occupations_Vert_percent="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Vert_percent));
			sb.append(",Respondent_Occupation_Management_Occupations_Index="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Index));
			sb.append(",Respondent_Occupation_Management_Occupations_Likelihood="
					+ String.valueOf(Respondent_Occupation_Management_Occupations_Likelihood));
			sb.append(",Business_and_Financial_Operations_Occupations_Unwgtd="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Unwgtd));
			sb.append(",Business_and_Financial_Operations_Occupations_Weighted="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Weighted));
			sb.append(",Business_and_Financial_Operations_Occupations_Horz_percent="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Horz_percent));
			sb.append(",Business_and_Financial_Operations_Occupations_Vert_percent="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Vert_percent));
			sb.append(",Business_and_Financial_Operations_Occupations_Index="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Index));
			sb.append(",Business_and_Financial_Operations_Occupations_Likelihood="
					+ String.valueOf(Business_and_Financial_Operations_Occupations_Likelihood));
			sb.append(",Computer_and_Mathematical_Occupations_Unwgtd="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Unwgtd));
			sb.append(",Computer_and_Mathematical_Occupations_Weighted="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Weighted));
			sb.append(",Computer_and_Mathematical_Occupations_Horz_percent="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Horz_percent));
			sb.append(",Computer_and_Mathematical_Occupations_Vert_percent="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Vert_percent));
			sb.append(",Computer_and_Mathematical_Occupations_Index="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Index));
			sb.append(",Computer_and_Mathematical_Occupations_Likelihood="
					+ String.valueOf(Computer_and_Mathematical_Occupations_Likelihood));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Unwgtd="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Unwgtd));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Weighted="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Weighted));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Horz_percent="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Horz_percent));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Vert_percent="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Vert_percent));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Index="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Index));
			sb.append(",Life_Physical_and_Social_Science_Occupations_Likelihood="
					+ String.valueOf(Life_Physical_and_Social_Science_Occupations_Likelihood));
			sb.append(",Legal_Occupations_Unwgtd="
					+ String.valueOf(Legal_Occupations_Unwgtd));
			sb.append(",Legal_Occupations_Weighted="
					+ String.valueOf(Legal_Occupations_Weighted));
			sb.append(",Legal_Occupations_Horz_percent="
					+ String.valueOf(Legal_Occupations_Horz_percent));
			sb.append(",Legal_Occupations_Vert_percent="
					+ String.valueOf(Legal_Occupations_Vert_percent));
			sb.append(",Legal_Occupations_Index="
					+ String.valueOf(Legal_Occupations_Index));
			sb.append(",Legal_Occupations_Likelihood="
					+ String.valueOf(Legal_Occupations_Likelihood));
			sb.append(",Healthcare_Practitioner_and_Technical_Unwgtd="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Unwgtd));
			sb.append(",Healthcare_Practitioner_and_Technical_Weighted="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Weighted));
			sb.append(",Healthcare_Practitioner_and_Technical_Horz_percent="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Horz_percent));
			sb.append(",Healthcare_Practitioner_and_Technical_Vert_percent="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Vert_percent));
			sb.append(",Healthcare_Practitioner_and_Technical_Index="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Index));
			sb.append(",Healthcare_Practitioner_and_Technical_Likelihood="
					+ String.valueOf(Healthcare_Practitioner_and_Technical_Likelihood));
			sb.append(",Healthcare_Support_Occupations_Unwgtd="
					+ String.valueOf(Healthcare_Support_Occupations_Unwgtd));
			sb.append(",Healthcare_Support_Occupations_Weighted="
					+ String.valueOf(Healthcare_Support_Occupations_Weighted));
			sb.append(",Healthcare_Support_Occupations_Horz_percent="
					+ String.valueOf(Healthcare_Support_Occupations_Horz_percent));
			sb.append(",Healthcare_Support_Occupations_Vert_percent="
					+ String.valueOf(Healthcare_Support_Occupations_Vert_percent));
			sb.append(",Healthcare_Support_Occupations_Index="
					+ String.valueOf(Healthcare_Support_Occupations_Index));
			sb.append(",Healthcare_Support_Occupations_Likelihood="
					+ String.valueOf(Healthcare_Support_Occupations_Likelihood));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Unwgtd="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Unwgtd));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Weighted="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Weighted));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Horz_percent="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Horz_percent));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Vert_percent="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Vert_percent));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Index="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Index));
			sb.append(",Food_Preparation_Serving_Related_Occupations_Likelihood="
					+ String.valueOf(Food_Preparation_Serving_Related_Occupations_Likelihood));
			sb.append(",Sales_and_Related_Occupations_Unwgtd="
					+ String.valueOf(Sales_and_Related_Occupations_Unwgtd));
			sb.append(",Sales_and_Related_Occupations_Weighted="
					+ String.valueOf(Sales_and_Related_Occupations_Weighted));
			sb.append(",Sales_and_Related_Occupations_Horz_percent="
					+ String.valueOf(Sales_and_Related_Occupations_Horz_percent));
			sb.append(",Sales_and_Related_Occupations_Vert_percent="
					+ String.valueOf(Sales_and_Related_Occupations_Vert_percent));
			sb.append(",Sales_and_Related_Occupations_Index="
					+ String.valueOf(Sales_and_Related_Occupations_Index));
			sb.append(",Sales_and_Related_Occupations_Likelihood="
					+ String.valueOf(Sales_and_Related_Occupations_Likelihood));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Index="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Index));
			sb.append(",Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood="
					+ String.valueOf(Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood));
			sb.append(",At_other_facility_Unwgtd="
					+ String.valueOf(At_other_facility_Unwgtd));
			sb.append(",At_other_facility_Weighted="
					+ String.valueOf(At_other_facility_Weighted));
			sb.append(",At_other_facility_Horz_percent="
					+ String.valueOf(At_other_facility_Horz_percent));
			sb.append(",At_other_facility_Vert_percent="
					+ String.valueOf(At_other_facility_Vert_percent));
			sb.append(",At_other_facility_Index="
					+ String.valueOf(At_other_facility_Index));
			sb.append(",At_other_facility_Likelihood="
					+ String.valueOf(At_other_facility_Likelihood));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(),
						object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_1Process(
			final java.util.Map<String, Object> globalMap)
			throws TalendException {
		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception()
						.getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row1Struct row1 = new row1Struct();

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null) {

						runStat.updateStatOnConnection("row1" + iterateId, 0, 0);

					}
				}

				int tos_count_tMap_1 = 0;

				class BytesLimit65535_tMap_1 {
					public void limitLog4jByte() throws Exception {

					}
				}

				new BytesLimit65535_tMap_1().limitLog4jByte();

				// ###############################
				// # Lookup's keys initialization
				// ###############################

				// ###############################
				// # Vars initialization
				class Var__tMap_1__Struct {
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
				// ###############################

				// ###############################
				// # Outputs initialization
				// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tFileInputExcel_1 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_1", false);
				start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_1";

				int tos_count_tFileInputExcel_1 = 0;

				class BytesLimit65535_tFileInputExcel_1 {
					public void limitLog4jByte() throws Exception {

					}
				}

				new BytesLimit65535_tFileInputExcel_1().limitLog4jByte();

				class RegexUtil_tFileInputExcel_1 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook,
							String oneSheetName, boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern
									.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern
										.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook,
							int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

				Object source_tFileInputExcel_1 = "/Users/masteradmin/Downloads/Veitone Psychographic Original For Database.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;

				if (source_tFileInputExcel_1 instanceof String) {
					workbook_tFileInputExcel_1 = new org.apache.poi.xssf.usermodel.XSSFWorkbook(
							(String) source_tFileInputExcel_1);
				} else if (source_tFileInputExcel_1 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_1 = new org.apache.poi.xssf.usermodel.XSSFWorkbook(
							(java.io.InputStream) source_tFileInputExcel_1);
				} else {
					workbook_tFileInputExcel_1 = null;
					throw new java.lang.Exception(
							"The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_1 : workbook_tFileInputExcel_1) {
						sheetList_tFileInputExcel_1
								.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_1);
					}
					if (sheetList_tFileInputExcel_1.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
						if (sheet_FilterNull_tFileInputExcel_1 != null
								&& sheetList_FilterNull_tFileInputExcel_1
										.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_1
										.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_1
									.add(sheet_FilterNull_tFileInputExcel_1);
						}
					}
					sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
					if (sheetList_tFileInputExcel_1.size() > 0) {
						int nb_line_tFileInputExcel_1 = 0;

						int begin_line_tFileInputExcel_1 = 1;

						int footer_input_tFileInputExcel_1 = 0;

						int end_line_tFileInputExcel_1 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
							end_line_tFileInputExcel_1 += (sheet_tFileInputExcel_1
									.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
						int limit_tFileInputExcel_1 = -1;
						int start_column_tFileInputExcel_1 = 1 - 1;
						int end_column_tFileInputExcel_1 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1
								.get(0);
						int rowCount_tFileInputExcel_1 = 0;
						int sheetIndex_tFileInputExcel_1 = 0;
						int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1
								.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1
								.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++) {

							int emptyColumnCount_tFileInputExcel_1 = 0;

							if (limit_tFileInputExcel_1 != -1
									&& nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
								break;
							}

							while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1
									+ currentRows_tFileInputExcel_1) {
								rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
								sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1
										.get(++sheetIndex_tFileInputExcel_1);
								currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1
										.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_1_CURRENT_SHEET",
									sheet_tFileInputExcel_1.getSheetName());
							if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
								row_tFileInputExcel_1 = sheet_tFileInputExcel_1
										.getRow(i_tFileInputExcel_1
												- rowCount_tFileInputExcel_1);
							}
							row1 = null;
							int tempRowLength_tFileInputExcel_1 = 221;

							int columnIndex_tFileInputExcel_1 = 0;

							String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
							int excel_end_column_tFileInputExcel_1;
							if (row_tFileInputExcel_1 == null) {
								excel_end_column_tFileInputExcel_1 = 0;
							} else {
								excel_end_column_tFileInputExcel_1 = row_tFileInputExcel_1
										.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_1;
							if (end_column_tFileInputExcel_1 == -1) {
								actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
							} else {
								actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 > excel_end_column_tFileInputExcel_1 ? excel_end_column_tFileInputExcel_1
										: end_column_tFileInputExcel_1;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_1; i++) {
								if (i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1
											.getCell(i
													+ start_column_tFileInputExcel_1);
									if (cell_tFileInputExcel_1 != null) {
										switch (cell_tFileInputExcel_1
												.getCellType()) {
										case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING:
											temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
													.getRichStringCellValue()
													.getString();
											break;
										case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_1)) {
												temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
														.getDateCellValue()
														.toString();
											} else {
												temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1
														.format(cell_tFileInputExcel_1
																.getNumericCellValue());
											}
											break;
										case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_BOOLEAN:
											temp_row_tFileInputExcel_1[i] = String
													.valueOf(cell_tFileInputExcel_1
															.getBooleanCellValue());
											break;
										case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_FORMULA:
											switch (cell_tFileInputExcel_1
													.getCachedFormulaResultType()) {
											case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_STRING:
												temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
														.getRichStringCellValue()
														.getString();
												break;
											case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_1)) {
													temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
															.getDateCellValue()
															.toString();
												} else {
													ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_1
																	.getNumericCellValue());
													temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1
															.getStringValue();
												}
												break;
											case org.apache.poi.ss.usermodel.Cell.CELL_TYPE_BOOLEAN:
												temp_row_tFileInputExcel_1[i] = String
														.valueOf(cell_tFileInputExcel_1
																.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_1[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_1[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_1[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_1[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_1 = false;
							row1 = new row1Struct();
							int curColNum_tFileInputExcel_1 = -1;
							String curColName_tFileInputExcel_1 = "";
							try {
								columnIndex_tFileInputExcel_1 = 0;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Columns_veitone";

									row1.Columns_veitone = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Columns_veitone = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 1;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "all_Unwgtd";

									row1.all_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.all_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 2;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "all_Weighted";

									row1.all_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.all_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 3;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "all_Vert_percent";

									row1.all_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.all_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 4;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "all_Percent_Value_Present";

									row1.all_Percent_Value_Present = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.all_Percent_Value_Present = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 5;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Unwgtd";

									row1.Men_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 6;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Weighted";

									row1.Men_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 7;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Horz_percent";

									row1.Men_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 8;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Vert_percent";

									row1.Men_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 9;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Index";

									row1.Men_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 10;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_Likelihood";

									row1.Men_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 11;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Unwgtd";

									row1.Women_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 12;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Weighted";

									row1.Women_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 13;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Horz_percent";

									row1.Women_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 14;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Vert_percent";

									row1.Women_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 15;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Index";

									row1.Women_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 16;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_Likelihood";

									row1.Women_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 17;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Unwgtd";

									row1.Age_18_24_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 18;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Weighted";

									row1.Age_18_24_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 19;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Horz_percent";

									row1.Age_18_24_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 20;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Vert_percent";

									row1.Age_18_24_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 21;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Index";

									row1.Age_18_24_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 22;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_18_24_Likelihood";

									row1.Age_18_24_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_18_24_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 23;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Unwgtd";

									row1.Age_25_34_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 24;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Weighted";

									row1.Age_25_34_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 25;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Horz_percent";

									row1.Age_25_34_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 26;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Vert_percent";

									row1.Age_25_34_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 27;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Index";

									row1.Age_25_34_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 28;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_25_34_Likelihood";

									row1.Age_25_34_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_25_34_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 29;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Unwgtd";

									row1.Age_35_44_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 30;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Weighted";

									row1.Age_35_44_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 31;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Horz_percent";

									row1.Age_35_44_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 32;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Vert_percent";

									row1.Age_35_44_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 33;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Index";

									row1.Age_35_44_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 34;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_35_44_Likelihood";

									row1.Age_35_44_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_35_44_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 35;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Unwgtd";

									row1.Age_45_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 36;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Weighted";

									row1.Age_45_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 37;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Horz_percent";

									row1.Age_45_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 38;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Vert_percent";

									row1.Age_45_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 39;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Index";

									row1.Age_45_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 40;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_45_54_Likelihood";

									row1.Age_45_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_45_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 41;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Unwgtd";

									row1.Age_55_64_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 42;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Weighted";

									row1.Age_55_64_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 43;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Horz_percent";

									row1.Age_55_64_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 44;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Vert_percent";

									row1.Age_55_64_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 45;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Index";

									row1.Age_55_64_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 46;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_55_64_Likelihood";

									row1.Age_55_64_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_55_64_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 47;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Unwgtd";

									row1.Age_65_above_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 48;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Weighted";

									row1.Age_65_above_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 49;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Horz_percent";

									row1.Age_65_above_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 50;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Vert_percent";

									row1.Age_65_above_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 51;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Index";

									row1.Age_65_above_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 52;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Age_65_above_Likelihood";

									row1.Age_65_above_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Age_65_above_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 53;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Unwgtd";

									row1.Adults_18_34_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 54;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Weighted";

									row1.Adults_18_34_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 55;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Horz_percent";

									row1.Adults_18_34_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 56;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Vert_percent";

									row1.Adults_18_34_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 57;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Index";

									row1.Adults_18_34_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 58;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_34_Likelihood";

									row1.Adults_18_34_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_34_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 59;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Unwgtd";

									row1.Adults_18_49_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 60;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Weighted";

									row1.Adults_18_49_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 61;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Horz_percent";

									row1.Adults_18_49_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 62;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Vert_percent";

									row1.Adults_18_49_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 63;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Index";

									row1.Adults_18_49_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 64;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_18_49_Likelihood";

									row1.Adults_18_49_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_18_49_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 65;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Unwgtd";

									row1.Adults_25_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 66;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Weighted";

									row1.Adults_25_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 67;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Horz_percent";

									row1.Adults_25_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 68;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Vert_percent";

									row1.Adults_25_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 69;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Index";

									row1.Adults_25_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 70;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_25_54_Likelihood";

									row1.Adults_25_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_25_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 71;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Unwgtd";

									row1.Adults_35_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 72;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Weighted";

									row1.Adults_35_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 73;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Horz_percent";

									row1.Adults_35_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 74;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Vert_percent";

									row1.Adults_35_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 75;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Index";

									row1.Adults_35_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 76;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Adults_35_54_Likelihood";

									row1.Adults_35_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Adults_35_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 77;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Unwgtd";

									row1.Men_18_34_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 78;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Weighted";

									row1.Men_18_34_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 79;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Horz_percent";

									row1.Men_18_34_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 80;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Vert_percent";

									row1.Men_18_34_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 81;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Index";

									row1.Men_18_34_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 82;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_34_Likelihood";

									row1.Men_18_34_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_34_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 83;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Unwgtd";

									row1.Men_18_49_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 84;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Weighted";

									row1.Men_18_49_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 85;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Horz_percent";

									row1.Men_18_49_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 86;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Vert_percent";

									row1.Men_18_49_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 87;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Index";

									row1.Men_18_49_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 88;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_18_49_Likelihood";

									row1.Men_18_49_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_18_49_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 89;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Unwgtd";

									row1.Men_25_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 90;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Weighted";

									row1.Men_25_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 91;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Horz_percent";

									row1.Men_25_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 92;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Vert_percent";

									row1.Men_25_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 93;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Index";

									row1.Men_25_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 94;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_25_54_Likelihood";

									row1.Men_25_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_25_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 95;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Unwgtd";

									row1.Men_35_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 96;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Weighted";

									row1.Men_35_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 97;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Horz_percent";

									row1.Men_35_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 98;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Vert_percent";

									row1.Men_35_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 99;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Index";

									row1.Men_35_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 100;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Men_35_54_Likelihood";

									row1.Men_35_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Men_35_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 101;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Unwgtd";

									row1.Women_18_34_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 102;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Weighted";

									row1.Women_18_34_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 103;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Horz_percent";

									row1.Women_18_34_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 104;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Vert_percent";

									row1.Women_18_34_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 105;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Index";

									row1.Women_18_34_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 106;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_34_Likelihood";

									row1.Women_18_34_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_34_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 107;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Unwgtd";

									row1.Women_18_49_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 108;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Weighted";

									row1.Women_18_49_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 109;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Horz_percent";

									row1.Women_18_49_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 110;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Vert_percent";

									row1.Women_18_49_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 111;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Index";

									row1.Women_18_49_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 112;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_18_49_Likelihood";

									row1.Women_18_49_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_18_49_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 113;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Unwgtd";

									row1.Women_25_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 114;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Weighted";

									row1.Women_25_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 115;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Horz_percent";

									row1.Women_25_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 116;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Vert_percent";

									row1.Women_25_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 117;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Index";

									row1.Women_25_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 118;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_25_54_Likelihood";

									row1.Women_25_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_25_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 119;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Unwgtd";

									row1.Women_35_54_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 120;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Weighted";

									row1.Women_35_54_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 121;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Horz_percent";

									row1.Women_35_54_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 122;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Vert_percent";

									row1.Women_35_54_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 123;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Index";

									row1.Women_35_54_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 124;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Women_35_54_Likelihood";

									row1.Women_35_54_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Women_35_54_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 125;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 126;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 127;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 128;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 129;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 130;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_1000000_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 131;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 132;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 133;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 134;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 135;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 136;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_500000_dollar_999999_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 137;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 138;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 139;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 140;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 141;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 142;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_250000_dollar_499999_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 143;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 144;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 145;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 146;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 147;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 148;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood";

									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__dollar_100000_dollar_249999_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 149;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 150;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 151;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 152;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 153;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 154;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood";

									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_Net_Worth_of_All_HH_Members__Under_dollar_100000_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 155;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Unwgtd";

									row1.Respondent_Occupation_Management_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 156;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Weighted";

									row1.Respondent_Occupation_Management_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 157;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Horz_percent";

									row1.Respondent_Occupation_Management_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 158;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Vert_percent";

									row1.Respondent_Occupation_Management_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 159;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Index";

									row1.Respondent_Occupation_Management_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 160;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Respondent_Occupation_Management_Occupations_Likelihood";

									row1.Respondent_Occupation_Management_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Respondent_Occupation_Management_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 161;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Unwgtd";

									row1.Business_and_Financial_Operations_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 162;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Weighted";

									row1.Business_and_Financial_Operations_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 163;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Horz_percent";

									row1.Business_and_Financial_Operations_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 164;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Vert_percent";

									row1.Business_and_Financial_Operations_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 165;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Index";

									row1.Business_and_Financial_Operations_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 166;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Business_and_Financial_Operations_Occupations_Likelihood";

									row1.Business_and_Financial_Operations_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Business_and_Financial_Operations_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 167;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Unwgtd";

									row1.Computer_and_Mathematical_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 168;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Weighted";

									row1.Computer_and_Mathematical_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 169;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Horz_percent";

									row1.Computer_and_Mathematical_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 170;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Vert_percent";

									row1.Computer_and_Mathematical_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 171;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Index";

									row1.Computer_and_Mathematical_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 172;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Computer_and_Mathematical_Occupations_Likelihood";

									row1.Computer_and_Mathematical_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Computer_and_Mathematical_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 173;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Unwgtd";

									row1.Life_Physical_and_Social_Science_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 174;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Weighted";

									row1.Life_Physical_and_Social_Science_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 175;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Horz_percent";

									row1.Life_Physical_and_Social_Science_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 176;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Vert_percent";

									row1.Life_Physical_and_Social_Science_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 177;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Index";

									row1.Life_Physical_and_Social_Science_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 178;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Life_Physical_and_Social_Science_Occupations_Likelihood";

									row1.Life_Physical_and_Social_Science_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Life_Physical_and_Social_Science_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 179;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Unwgtd";

									row1.Legal_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 180;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Weighted";

									row1.Legal_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 181;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Horz_percent";

									row1.Legal_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 182;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Vert_percent";

									row1.Legal_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 183;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Index";

									row1.Legal_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 184;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Legal_Occupations_Likelihood";

									row1.Legal_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Legal_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 185;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Unwgtd";

									row1.Healthcare_Practitioner_and_Technical_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 186;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Weighted";

									row1.Healthcare_Practitioner_and_Technical_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 187;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Horz_percent";

									row1.Healthcare_Practitioner_and_Technical_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 188;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Vert_percent";

									row1.Healthcare_Practitioner_and_Technical_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 189;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Index";

									row1.Healthcare_Practitioner_and_Technical_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 190;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Practitioner_and_Technical_Likelihood";

									row1.Healthcare_Practitioner_and_Technical_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Practitioner_and_Technical_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 191;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Unwgtd";

									row1.Healthcare_Support_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 192;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Weighted";

									row1.Healthcare_Support_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 193;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Horz_percent";

									row1.Healthcare_Support_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 194;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Vert_percent";

									row1.Healthcare_Support_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 195;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Index";

									row1.Healthcare_Support_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 196;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Healthcare_Support_Occupations_Likelihood";

									row1.Healthcare_Support_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Healthcare_Support_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 197;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Unwgtd";

									row1.Food_Preparation_Serving_Related_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 198;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Weighted";

									row1.Food_Preparation_Serving_Related_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 199;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Horz_percent";

									row1.Food_Preparation_Serving_Related_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 200;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Vert_percent";

									row1.Food_Preparation_Serving_Related_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 201;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Index";

									row1.Food_Preparation_Serving_Related_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 202;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Food_Preparation_Serving_Related_Occupations_Likelihood";

									row1.Food_Preparation_Serving_Related_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Food_Preparation_Serving_Related_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 203;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Unwgtd";

									row1.Sales_and_Related_Occupations_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 204;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Weighted";

									row1.Sales_and_Related_Occupations_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 205;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Horz_percent";

									row1.Sales_and_Related_Occupations_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 206;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Vert_percent";

									row1.Sales_and_Related_Occupations_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 207;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Index";

									row1.Sales_and_Related_Occupations_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 208;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Sales_and_Related_Occupations_Likelihood";

									row1.Sales_and_Related_Occupations_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Sales_and_Related_Occupations_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 209;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 210;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 211;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 212;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 213;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Index";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 214;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood";

									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.Physical_Fitness_Regular_Exercise_Pgm_At_club_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 215;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Unwgtd";

									row1.At_other_facility_Unwgtd = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Unwgtd = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 216;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Weighted";

									row1.At_other_facility_Weighted = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Weighted = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 217;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Horz_percent";

									row1.At_other_facility_Horz_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Horz_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 218;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Vert_percent";

									row1.At_other_facility_Vert_percent = ParserUtils
											.parseTo_Float(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Vert_percent = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 219;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Index";

									row1.At_other_facility_Index = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Index = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 220;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1]
										.length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1
											+ 1;
									curColName_tFileInputExcel_1 = "At_other_facility_Likelihood";

									row1.At_other_facility_Likelihood = ParserUtils
											.parseTo_Integer(ParserUtils
													.parseTo_Number(
															temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1],
															null,
															'.' == decimalChar_tFileInputExcel_1 ? null
																	: decimalChar_tFileInputExcel_1));
								} else {
									row1.At_other_facility_Likelihood = null;
									emptyColumnCount_tFileInputExcel_1++;
								}

								nb_line_tFileInputExcel_1++;

							} catch (java.lang.Exception e) {
								whetherReject_tFileInputExcel_1 = true;
								System.err.println(e.getMessage());
								row1 = null;
							}

							/**
							 * [tFileInputExcel_1 begin ] stop
							 */

							/**
							 * [tFileInputExcel_1 main ] start
							 */

							currentComponent = "tFileInputExcel_1";

							tos_count_tFileInputExcel_1++;

							/**
							 * [tFileInputExcel_1 main ] stop
							 */

							/**
							 * [tFileInputExcel_1 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_1";

							/**
							 * [tFileInputExcel_1 process_data_begin ] stop
							 */
							// Start of branch "row1"
							if (row1 != null) {

								/**
								 * [tMap_1 main ] start
								 */

								currentComponent = "tMap_1";

								// row1
								// row1

								if (execStat) {
									runStat.updateStatOnConnection("row1"
											+ iterateId, 1, 1);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_1 = false;
								boolean mainRowRejected_tMap_1 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
									// ###############################
									// # Output tables

									// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_1 = false;

								tos_count_tMap_1++;

								/**
								 * [tMap_1 main ] stop
								 */

								/**
								 * [tMap_1 process_data_begin ] start
								 */

								currentComponent = "tMap_1";

								/**
								 * [tMap_1 process_data_begin ] stop
								 */

								/**
								 * [tMap_1 process_data_end ] start
								 */

								currentComponent = "tMap_1";

								/**
								 * [tMap_1 process_data_end ] stop
								 */

							} // End of branch "row1"

							/**
							 * [tFileInputExcel_1 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_1";

							/**
							 * [tFileInputExcel_1 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_1 end ] start
							 */

							currentComponent = "tFileInputExcel_1";

						}

						globalMap.put("tFileInputExcel_1_NB_LINE",
								nb_line_tFileInputExcel_1);

					}

				} finally {

					if (!(source_tFileInputExcel_1 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_1.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_1", true);
				end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_1 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

				// ###############################
				// # Lookup hashes releasing
				// ###############################

				if (execStat) {
					if (resourceMap.get("inIterateVComp") == null
							|| !((Boolean) resourceMap.get("inIterateVComp"))) {
						runStat.updateStatOnConnection("row1" + iterateId, 2, 0);
					}
				}

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

			}// end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent,
					globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tFileInputExcel_1 finally ] start
				 */

				currentComponent = "tFileInputExcel_1";

				/**
				 * [tFileInputExcel_1 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	private PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final veriton_data veriton_dataClass = new veriton_data();

		int exitCode = veriton_dataClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket
				// can't open
				System.err.println("The statistics socket port " + portStats
						+ " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}

		try {
			// call job/subjob with an existing context, like:
			// --context=production. if without this parameter, there will use
			// the default context instead.
			java.io.InputStream inContext = veriton_data.class.getClassLoader()
					.getResourceAsStream(
							"local_project/veriton_data_0_1/contexts/"
									+ contextStr + ".properties");
			if (inContext == null) {
				inContext = veriton_data.class
						.getClassLoader()
						.getResourceAsStream(
								"config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				// defaultProps is in order to keep the original context value
				defaultProps.load(inContext);
				inContext.close();
				context = new ContextProperties(defaultProps);
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param
				// is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param
							.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil
				.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName,
				jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName,
				parent_part_launcher, Thread.currentThread().getId() + "", "",
				"", "", "",
				resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory()
				- Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tFileInputExcel_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_1) {
			globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_1.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory()
				- Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory)
					+ " bytes memory increase when running : veriton_data");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;
		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher,
				Thread.currentThread().getId() + "", "", "" + returnCode, "",
				"", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index),
							keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index),
							keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		}

	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" },
			{ "\\'", "\'" }, { "\\r", "\r" }, { "\\f", "\f" }, { "\\b", "\b" },
			{ "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex,
							index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left
			// into the result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 312460 characters generated by Talend Open Studio for Data Integration on the
 * 21 October, 2019 12:02:41 PM IST
 ************************************************************************************************/
